CV name: description of CV (atoms are indexed from 1); code to evaluate CV
CV1: distance between atoms ['84', '86']; mdtraj.compute_distances(mtraj, numpy.array([[83, 85]]))[0][0] * 10
CV2: distance between atoms ['91', '84']; mdtraj.compute_distances(mtraj, numpy.array([[90, 83]]))[0][0] * 10
CV3: distance between atoms ['89', '86']; mdtraj.compute_distances(mtraj, numpy.array([[88, 85]]))[0][0] * 10
CV4: distance between atoms ['91', '93']; mdtraj.compute_distances(mtraj, numpy.array([[90, 92]]))[0][0] * 10
CV5: distance between atoms ['91', '92']; mdtraj.compute_distances(mtraj, numpy.array([[90, 91]]))[0][0] * 10
CV6: distance between atoms ['93', '95']; mdtraj.compute_distances(mtraj, numpy.array([[92, 94]]))[0][0] * 10
CV7: distance between atoms ['97', '95']; mdtraj.compute_distances(mtraj, numpy.array([[96, 94]]))[0][0] * 10
CV8: distance between atoms ['101', '95']; mdtraj.compute_distances(mtraj, numpy.array([[100, 94]]))[0][0] * 10
CV9: distance between atoms ['101', '103']; mdtraj.compute_distances(mtraj, numpy.array([[100, 102]]))[0][0] * 10
CV10: distance between atoms ['101', '102']; mdtraj.compute_distances(mtraj, numpy.array([[100, 101]]))[0][0] * 10
CV11: distance between atoms ['103', '104']; mdtraj.compute_distances(mtraj, numpy.array([[102, 103]]))[0][0] * 10
CV12: distance between atoms ['105', '103']; mdtraj.compute_distances(mtraj, numpy.array([[104, 102]]))[0][0] * 10
CV13: distance between atoms ['105', '107']; mdtraj.compute_distances(mtraj, numpy.array([[104, 106]]))[0][0] * 10
CV14: distance between atoms ['105', '120']; mdtraj.compute_distances(mtraj, numpy.array([[104, 119]]))[0][0] * 10
CV15: distance between atoms ['107', '109']; mdtraj.compute_distances(mtraj, numpy.array([[106, 108]]))[0][0] * 10
CV16: distance between atoms ['113', '107']; mdtraj.compute_distances(mtraj, numpy.array([[112, 106]]))[0][0] * 10
CV17: distance between atoms ['113', '116']; mdtraj.compute_distances(mtraj, numpy.array([[112, 115]]))[0][0] * 10
CV18: distance between atoms ['122', '120']; mdtraj.compute_distances(mtraj, numpy.array([[121, 119]]))[0][0] * 10
CV19: distance between atoms ['121', '120']; mdtraj.compute_distances(mtraj, numpy.array([[120, 119]]))[0][0] * 10
CV20: distance between atoms ['122', '124']; mdtraj.compute_distances(mtraj, numpy.array([[121, 123]]))[0][0] * 10
CV21: distance between atoms ['124', '126']; mdtraj.compute_distances(mtraj, numpy.array([[123, 125]]))[0][0] * 10
CV22: distance between atoms ['124', '132']; mdtraj.compute_distances(mtraj, numpy.array([[123, 131]]))[0][0] * 10
CV23: distance between atoms ['132', '134']; mdtraj.compute_distances(mtraj, numpy.array([[131, 133]]))[0][0] * 10
CV24: distance between atoms ['132', '133']; mdtraj.compute_distances(mtraj, numpy.array([[131, 132]]))[0][0] * 10
CV25: distance between atoms ['134', '136']; mdtraj.compute_distances(mtraj, numpy.array([[133, 135]]))[0][0] * 10
CV26: distance between atoms ['138', '136']; mdtraj.compute_distances(mtraj, numpy.array([[137, 135]]))[0][0] * 10
CV27: distance between atoms ['151', '136']; mdtraj.compute_distances(mtraj, numpy.array([[150, 135]]))[0][0] * 10
CV28: distance between atoms ['138', '141']; mdtraj.compute_distances(mtraj, numpy.array([[137, 140]]))[0][0] * 10
CV29: distance between atoms ['147', '141']; mdtraj.compute_distances(mtraj, numpy.array([[146, 140]]))[0][0] * 10
CV30: distance between atoms ['153', '151']; mdtraj.compute_distances(mtraj, numpy.array([[152, 150]]))[0][0] * 10
CV31: distance between atoms ['151', '152']; mdtraj.compute_distances(mtraj, numpy.array([[150, 151]]))[0][0] * 10
CV32: distance between atoms ['153', '155']; mdtraj.compute_distances(mtraj, numpy.array([[152, 154]]))[0][0] * 10
CV33: distance between atoms ['155', '157']; mdtraj.compute_distances(mtraj, numpy.array([[154, 156]]))[0][0] * 10
CV34: distance between atoms ['155', '167']; mdtraj.compute_distances(mtraj, numpy.array([[154, 166]]))[0][0] * 10
CV35: distance between atoms ['157', '159']; mdtraj.compute_distances(mtraj, numpy.array([[156, 158]]))[0][0] * 10
CV36: distance between atoms ['163', '157']; mdtraj.compute_distances(mtraj, numpy.array([[162, 156]]))[0][0] * 10
CV37: distance between atoms ['169', '167']; mdtraj.compute_distances(mtraj, numpy.array([[168, 166]]))[0][0] * 10
CV38: distance between atoms ['101', '104']; mdtraj.compute_distances(mtraj, numpy.array([[100, 103]]))[0][0] * 10
CV39: distance between atoms ['101', '105']; mdtraj.compute_distances(mtraj, numpy.array([[100, 104]]))[0][0] * 10
CV40: distance between atoms ['102', '103']; mdtraj.compute_distances(mtraj, numpy.array([[101, 102]]))[0][0] * 10
CV41: distance between atoms ['102', '104']; mdtraj.compute_distances(mtraj, numpy.array([[101, 103]]))[0][0] * 10
CV42: distance between atoms ['102', '105']; mdtraj.compute_distances(mtraj, numpy.array([[101, 104]]))[0][0] * 10
CV43: distance between atoms ['104', '105']; mdtraj.compute_distances(mtraj, numpy.array([[103, 104]]))[0][0] * 10
CV44: angle between atoms ['84', '86', '89']; mdtraj.compute_angles(mtraj, numpy.array([[83, 85, 88]]))[0][0] * 180 / numpy.pi
CV45: angle between atoms ['84', '91', '92']; mdtraj.compute_angles(mtraj, numpy.array([[83, 90, 91]]))[0][0] * 180 / numpy.pi
CV46: angle between atoms ['84', '91', '93']; mdtraj.compute_angles(mtraj, numpy.array([[83, 90, 92]]))[0][0] * 180 / numpy.pi
CV47: angle between atoms ['86', '84', '91']; mdtraj.compute_angles(mtraj, numpy.array([[85, 83, 90]]))[0][0] * 180 / numpy.pi
CV48: angle between atoms ['91', '93', '95']; mdtraj.compute_angles(mtraj, numpy.array([[90, 92, 94]]))[0][0] * 180 / numpy.pi
CV49: angle between atoms ['92', '91', '93']; mdtraj.compute_angles(mtraj, numpy.array([[91, 90, 92]]))[0][0] * 180 / numpy.pi
CV50: angle between atoms ['93', '95', '97']; mdtraj.compute_angles(mtraj, numpy.array([[92, 94, 96]]))[0][0] * 180 / numpy.pi
CV51: angle between atoms ['93', '95', '101']; mdtraj.compute_angles(mtraj, numpy.array([[92, 94, 100]]))[0][0] * 180 / numpy.pi
CV52: angle between atoms ['95', '101', '102']; mdtraj.compute_angles(mtraj, numpy.array([[94, 100, 101]]))[0][0] * 180 / numpy.pi
CV53: angle between atoms ['95', '101', '103']; mdtraj.compute_angles(mtraj, numpy.array([[94, 100, 102]]))[0][0] * 180 / numpy.pi
CV54: angle between atoms ['95', '101', '104']; mdtraj.compute_angles(mtraj, numpy.array([[94, 100, 103]]))[0][0] * 180 / numpy.pi
CV55: angle between atoms ['95', '101', '105']; mdtraj.compute_angles(mtraj, numpy.array([[94, 100, 104]]))[0][0] * 180 / numpy.pi
CV56: angle between atoms ['97', '95', '101']; mdtraj.compute_angles(mtraj, numpy.array([[96, 94, 100]]))[0][0] * 180 / numpy.pi
CV57: angle between atoms ['101', '103', '102']; mdtraj.compute_angles(mtraj, numpy.array([[100, 102, 101]]))[0][0] * 180 / numpy.pi
CV58: angle between atoms ['101', '104', '102']; mdtraj.compute_angles(mtraj, numpy.array([[100, 103, 101]]))[0][0] * 180 / numpy.pi
CV59: angle between atoms ['101', '105', '102']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 101]]))[0][0] * 180 / numpy.pi
CV60: angle between atoms ['101', '102', '103']; mdtraj.compute_angles(mtraj, numpy.array([[100, 101, 102]]))[0][0] * 180 / numpy.pi
CV61: angle between atoms ['101', '104', '103']; mdtraj.compute_angles(mtraj, numpy.array([[100, 103, 102]]))[0][0] * 180 / numpy.pi
CV62: angle between atoms ['101', '105', '103']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 102]]))[0][0] * 180 / numpy.pi
CV63: angle between atoms ['101', '102', '104']; mdtraj.compute_angles(mtraj, numpy.array([[100, 101, 103]]))[0][0] * 180 / numpy.pi
CV64: angle between atoms ['101', '103', '104']; mdtraj.compute_angles(mtraj, numpy.array([[100, 102, 103]]))[0][0] * 180 / numpy.pi
CV65: angle between atoms ['101', '105', '104']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 103]]))[0][0] * 180 / numpy.pi
CV66: angle between atoms ['101', '102', '105']; mdtraj.compute_angles(mtraj, numpy.array([[100, 101, 104]]))[0][0] * 180 / numpy.pi
CV67: angle between atoms ['101', '103', '105']; mdtraj.compute_angles(mtraj, numpy.array([[100, 102, 104]]))[0][0] * 180 / numpy.pi
CV68: angle between atoms ['101', '104', '105']; mdtraj.compute_angles(mtraj, numpy.array([[100, 103, 104]]))[0][0] * 180 / numpy.pi
CV69: angle between atoms ['101', '105', '107']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 106]]))[0][0] * 180 / numpy.pi
CV70: angle between atoms ['101', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 119]]))[0][0] * 180 / numpy.pi
CV71: angle between atoms ['102', '101', '103']; mdtraj.compute_angles(mtraj, numpy.array([[101, 100, 102]]))[0][0] * 180 / numpy.pi
CV72: angle between atoms ['102', '104', '103']; mdtraj.compute_angles(mtraj, numpy.array([[101, 103, 102]]))[0][0] * 180 / numpy.pi
CV73: angle between atoms ['102', '105', '103']; mdtraj.compute_angles(mtraj, numpy.array([[101, 104, 102]]))[0][0] * 180 / numpy.pi
CV74: angle between atoms ['102', '101', '104']; mdtraj.compute_angles(mtraj, numpy.array([[101, 100, 103]]))[0][0] * 180 / numpy.pi
CV75: angle between atoms ['102', '103', '104']; mdtraj.compute_angles(mtraj, numpy.array([[101, 102, 103]]))[0][0] * 180 / numpy.pi
CV76: angle between atoms ['102', '105', '104']; mdtraj.compute_angles(mtraj, numpy.array([[101, 104, 103]]))[0][0] * 180 / numpy.pi
CV77: angle between atoms ['102', '101', '105']; mdtraj.compute_angles(mtraj, numpy.array([[101, 100, 104]]))[0][0] * 180 / numpy.pi
CV78: angle between atoms ['102', '103', '105']; mdtraj.compute_angles(mtraj, numpy.array([[101, 102, 104]]))[0][0] * 180 / numpy.pi
CV79: angle between atoms ['102', '104', '105']; mdtraj.compute_angles(mtraj, numpy.array([[101, 103, 104]]))[0][0] * 180 / numpy.pi
CV80: angle between atoms ['102', '105', '107']; mdtraj.compute_angles(mtraj, numpy.array([[101, 104, 106]]))[0][0] * 180 / numpy.pi
CV81: angle between atoms ['102', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[101, 104, 119]]))[0][0] * 180 / numpy.pi
CV82: angle between atoms ['103', '101', '104']; mdtraj.compute_angles(mtraj, numpy.array([[102, 100, 103]]))[0][0] * 180 / numpy.pi
CV83: angle between atoms ['103', '102', '104']; mdtraj.compute_angles(mtraj, numpy.array([[102, 101, 103]]))[0][0] * 180 / numpy.pi
CV84: angle between atoms ['103', '105', '104']; mdtraj.compute_angles(mtraj, numpy.array([[102, 104, 103]]))[0][0] * 180 / numpy.pi
CV85: angle between atoms ['103', '101', '105']; mdtraj.compute_angles(mtraj, numpy.array([[102, 100, 104]]))[0][0] * 180 / numpy.pi
CV86: angle between atoms ['103', '102', '105']; mdtraj.compute_angles(mtraj, numpy.array([[102, 101, 104]]))[0][0] * 180 / numpy.pi
CV87: angle between atoms ['103', '104', '105']; mdtraj.compute_angles(mtraj, numpy.array([[102, 103, 104]]))[0][0] * 180 / numpy.pi
CV88: angle between atoms ['103', '105', '107']; mdtraj.compute_angles(mtraj, numpy.array([[102, 104, 106]]))[0][0] * 180 / numpy.pi
CV89: angle between atoms ['103', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[102, 104, 119]]))[0][0] * 180 / numpy.pi
CV90: angle between atoms ['104', '101', '105']; mdtraj.compute_angles(mtraj, numpy.array([[103, 100, 104]]))[0][0] * 180 / numpy.pi
CV91: angle between atoms ['104', '102', '105']; mdtraj.compute_angles(mtraj, numpy.array([[103, 101, 104]]))[0][0] * 180 / numpy.pi
CV92: angle between atoms ['104', '103', '105']; mdtraj.compute_angles(mtraj, numpy.array([[103, 102, 104]]))[0][0] * 180 / numpy.pi
CV93: angle between atoms ['104', '105', '107']; mdtraj.compute_angles(mtraj, numpy.array([[103, 104, 106]]))[0][0] * 180 / numpy.pi
CV94: angle between atoms ['104', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[103, 104, 119]]))[0][0] * 180 / numpy.pi
CV95: angle between atoms ['105', '107', '109']; mdtraj.compute_angles(mtraj, numpy.array([[104, 106, 108]]))[0][0] * 180 / numpy.pi
CV96: angle between atoms ['105', '107', '113']; mdtraj.compute_angles(mtraj, numpy.array([[104, 106, 112]]))[0][0] * 180 / numpy.pi
CV97: angle between atoms ['105', '120', '121']; mdtraj.compute_angles(mtraj, numpy.array([[104, 119, 120]]))[0][0] * 180 / numpy.pi
CV98: angle between atoms ['105', '120', '122']; mdtraj.compute_angles(mtraj, numpy.array([[104, 119, 121]]))[0][0] * 180 / numpy.pi
CV99: angle between atoms ['107', '113', '116']; mdtraj.compute_angles(mtraj, numpy.array([[106, 112, 115]]))[0][0] * 180 / numpy.pi
CV100: angle between atoms ['107', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[106, 104, 119]]))[0][0] * 180 / numpy.pi
CV101: angle between atoms ['109', '107', '113']; mdtraj.compute_angles(mtraj, numpy.array([[108, 106, 112]]))[0][0] * 180 / numpy.pi
CV102: angle between atoms ['120', '122', '124']; mdtraj.compute_angles(mtraj, numpy.array([[119, 121, 123]]))[0][0] * 180 / numpy.pi
CV103: angle between atoms ['121', '120', '122']; mdtraj.compute_angles(mtraj, numpy.array([[120, 119, 121]]))[0][0] * 180 / numpy.pi
CV104: angle between atoms ['122', '124', '126']; mdtraj.compute_angles(mtraj, numpy.array([[121, 123, 125]]))[0][0] * 180 / numpy.pi
CV105: angle between atoms ['122', '124', '132']; mdtraj.compute_angles(mtraj, numpy.array([[121, 123, 131]]))[0][0] * 180 / numpy.pi
CV106: angle between atoms ['124', '132', '133']; mdtraj.compute_angles(mtraj, numpy.array([[123, 131, 132]]))[0][0] * 180 / numpy.pi
CV107: angle between atoms ['124', '132', '134']; mdtraj.compute_angles(mtraj, numpy.array([[123, 131, 133]]))[0][0] * 180 / numpy.pi
CV108: angle between atoms ['126', '124', '132']; mdtraj.compute_angles(mtraj, numpy.array([[125, 123, 131]]))[0][0] * 180 / numpy.pi
CV109: angle between atoms ['132', '134', '136']; mdtraj.compute_angles(mtraj, numpy.array([[131, 133, 135]]))[0][0] * 180 / numpy.pi
CV110: angle between atoms ['133', '132', '134']; mdtraj.compute_angles(mtraj, numpy.array([[132, 131, 133]]))[0][0] * 180 / numpy.pi
CV111: angle between atoms ['134', '136', '138']; mdtraj.compute_angles(mtraj, numpy.array([[133, 135, 137]]))[0][0] * 180 / numpy.pi
CV112: angle between atoms ['134', '136', '151']; mdtraj.compute_angles(mtraj, numpy.array([[133, 135, 150]]))[0][0] * 180 / numpy.pi
CV113: angle between atoms ['136', '138', '141']; mdtraj.compute_angles(mtraj, numpy.array([[135, 137, 140]]))[0][0] * 180 / numpy.pi
CV114: angle between atoms ['136', '151', '152']; mdtraj.compute_angles(mtraj, numpy.array([[135, 150, 151]]))[0][0] * 180 / numpy.pi
CV115: angle between atoms ['136', '151', '153']; mdtraj.compute_angles(mtraj, numpy.array([[135, 150, 152]]))[0][0] * 180 / numpy.pi
CV116: angle between atoms ['138', '141', '147']; mdtraj.compute_angles(mtraj, numpy.array([[137, 140, 146]]))[0][0] * 180 / numpy.pi
CV117: angle between atoms ['138', '136', '151']; mdtraj.compute_angles(mtraj, numpy.array([[137, 135, 150]]))[0][0] * 180 / numpy.pi
CV118: angle between atoms ['151', '153', '155']; mdtraj.compute_angles(mtraj, numpy.array([[150, 152, 154]]))[0][0] * 180 / numpy.pi
CV119: angle between atoms ['152', '151', '153']; mdtraj.compute_angles(mtraj, numpy.array([[151, 150, 152]]))[0][0] * 180 / numpy.pi
CV120: angle between atoms ['153', '155', '157']; mdtraj.compute_angles(mtraj, numpy.array([[152, 154, 156]]))[0][0] * 180 / numpy.pi
CV121: angle between atoms ['153', '155', '167']; mdtraj.compute_angles(mtraj, numpy.array([[152, 154, 166]]))[0][0] * 180 / numpy.pi
CV122: angle between atoms ['155', '157', '159']; mdtraj.compute_angles(mtraj, numpy.array([[154, 156, 158]]))[0][0] * 180 / numpy.pi
CV123: angle between atoms ['155', '157', '163']; mdtraj.compute_angles(mtraj, numpy.array([[154, 156, 162]]))[0][0] * 180 / numpy.pi
CV124: angle between atoms ['155', '167', '169']; mdtraj.compute_angles(mtraj, numpy.array([[154, 166, 168]]))[0][0] * 180 / numpy.pi
CV125: angle between atoms ['157', '155', '167']; mdtraj.compute_angles(mtraj, numpy.array([[156, 154, 166]]))[0][0] * 180 / numpy.pi
CV126: angle between atoms ['159', '157', '163']; mdtraj.compute_angles(mtraj, numpy.array([[158, 156, 162]]))[0][0] * 180 / numpy.pi
CV127: dihedral between atoms ['91', '84', '86', '89']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 83, 85, 88]]))[0][0] * 180 / numpy.pi
CV128: dihedral between atoms ['86', '84', '91', '92']; mdtraj.compute_dihedrals(mtraj, numpy.array([[85, 83, 90, 91]]))[0][0] * 180 / numpy.pi
CV129: dihedral between atoms ['86', '84', '91', '93']; mdtraj.compute_dihedrals(mtraj, numpy.array([[85, 83, 90, 92]]))[0][0] * 180 / numpy.pi
CV130: dihedral between atoms ['84', '91', '93', '95']; mdtraj.compute_dihedrals(mtraj, numpy.array([[83, 90, 92, 94]]))[0][0] * 180 / numpy.pi
CV131: dihedral between atoms ['89', '86', '84', '91']; mdtraj.compute_dihedrals(mtraj, numpy.array([[88, 85, 83, 90]]))[0][0] * 180 / numpy.pi
CV132: dihedral between atoms ['86', '84', '91', '93']; mdtraj.compute_dihedrals(mtraj, numpy.array([[85, 83, 90, 92]]))[0][0] * 180 / numpy.pi
CV133: dihedral between atoms ['86', '84', '91', '92']; mdtraj.compute_dihedrals(mtraj, numpy.array([[85, 83, 90, 91]]))[0][0] * 180 / numpy.pi
CV134: dihedral between atoms ['92', '91', '93', '95']; mdtraj.compute_dihedrals(mtraj, numpy.array([[91, 90, 92, 94]]))[0][0] * 180 / numpy.pi
CV135: dihedral between atoms ['91', '93', '95', '97']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 92, 94, 96]]))[0][0] * 180 / numpy.pi
CV136: dihedral between atoms ['91', '93', '95', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 92, 94, 100]]))[0][0] * 180 / numpy.pi
CV137: dihedral between atoms ['92', '91', '93', '95']; mdtraj.compute_dihedrals(mtraj, numpy.array([[91, 90, 92, 94]]))[0][0] * 180 / numpy.pi
CV138: dihedral between atoms ['93', '95', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 102]]))[0][0] * 180 / numpy.pi
CV139: dihedral between atoms ['93', '95', '101', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 101]]))[0][0] * 180 / numpy.pi
CV140: dihedral between atoms ['93', '95', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 103]]))[0][0] * 180 / numpy.pi
CV141: dihedral between atoms ['93', '95', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 104]]))[0][0] * 180 / numpy.pi
CV142: dihedral between atoms ['97', '95', '101', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 101]]))[0][0] * 180 / numpy.pi
CV143: dihedral between atoms ['95', '101', '102', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 101, 102]]))[0][0] * 180 / numpy.pi
CV144: dihedral between atoms ['95', '101', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 101, 103]]))[0][0] * 180 / numpy.pi
CV145: dihedral between atoms ['95', '101', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 101, 104]]))[0][0] * 180 / numpy.pi
CV146: dihedral between atoms ['97', '95', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 102]]))[0][0] * 180 / numpy.pi
CV147: dihedral between atoms ['95', '101', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 102, 103]]))[0][0] * 180 / numpy.pi
CV148: dihedral between atoms ['95', '101', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 102, 104]]))[0][0] * 180 / numpy.pi
CV149: dihedral between atoms ['95', '101', '103', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 102, 101]]))[0][0] * 180 / numpy.pi
CV150: dihedral between atoms ['97', '95', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 103]]))[0][0] * 180 / numpy.pi
CV151: dihedral between atoms ['95', '101', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 103, 102]]))[0][0] * 180 / numpy.pi
CV152: dihedral between atoms ['95', '101', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 103, 101]]))[0][0] * 180 / numpy.pi
CV153: dihedral between atoms ['95', '101', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 103, 104]]))[0][0] * 180 / numpy.pi
CV154: dihedral between atoms ['97', '95', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 104]]))[0][0] * 180 / numpy.pi
CV155: dihedral between atoms ['95', '101', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 102]]))[0][0] * 180 / numpy.pi
CV156: dihedral between atoms ['95', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV157: dihedral between atoms ['95', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV158: dihedral between atoms ['95', '101', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 101]]))[0][0] * 180 / numpy.pi
CV159: dihedral between atoms ['95', '101', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 103]]))[0][0] * 180 / numpy.pi
CV160: dihedral between atoms ['97', '95', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 102]]))[0][0] * 180 / numpy.pi
CV161: dihedral between atoms ['97', '95', '101', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 101]]))[0][0] * 180 / numpy.pi
CV162: dihedral between atoms ['97', '95', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 103]]))[0][0] * 180 / numpy.pi
CV163: dihedral between atoms ['97', '95', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 104]]))[0][0] * 180 / numpy.pi
CV164: dihedral between atoms ['104', '101', '103', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 102, 101]]))[0][0] * 180 / numpy.pi
CV165: dihedral between atoms ['105', '101', '103', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 102, 101]]))[0][0] * 180 / numpy.pi
CV166: dihedral between atoms ['103', '101', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 103, 101]]))[0][0] * 180 / numpy.pi
CV167: dihedral between atoms ['105', '101', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 103, 101]]))[0][0] * 180 / numpy.pi
CV168: dihedral between atoms ['103', '101', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 101]]))[0][0] * 180 / numpy.pi
CV169: dihedral between atoms ['104', '101', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 101]]))[0][0] * 180 / numpy.pi
CV170: dihedral between atoms ['101', '102', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 102, 103]]))[0][0] * 180 / numpy.pi
CV171: dihedral between atoms ['101', '102', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 102, 104]]))[0][0] * 180 / numpy.pi
CV172: dihedral between atoms ['104', '101', '102', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 101, 102]]))[0][0] * 180 / numpy.pi
CV173: dihedral between atoms ['105', '101', '102', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 101, 102]]))[0][0] * 180 / numpy.pi
CV174: dihedral between atoms ['102', '101', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 103, 102]]))[0][0] * 180 / numpy.pi
CV175: dihedral between atoms ['101', '104', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 102, 104]]))[0][0] * 180 / numpy.pi
CV176: dihedral between atoms ['105', '101', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 103, 102]]))[0][0] * 180 / numpy.pi
CV177: dihedral between atoms ['102', '101', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 102]]))[0][0] * 180 / numpy.pi
CV178: dihedral between atoms ['101', '105', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 102, 103]]))[0][0] * 180 / numpy.pi
CV179: dihedral between atoms ['104', '101', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 102]]))[0][0] * 180 / numpy.pi
CV180: dihedral between atoms ['103', '101', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 101, 103]]))[0][0] * 180 / numpy.pi
CV181: dihedral between atoms ['105', '101', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 101, 103]]))[0][0] * 180 / numpy.pi
CV182: dihedral between atoms ['102', '101', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 102, 103]]))[0][0] * 180 / numpy.pi
CV183: dihedral between atoms ['105', '101', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 102, 103]]))[0][0] * 180 / numpy.pi
CV184: dihedral between atoms ['103', '101', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 103]]))[0][0] * 180 / numpy.pi
CV185: dihedral between atoms ['102', '101', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 103]]))[0][0] * 180 / numpy.pi
CV186: dihedral between atoms ['103', '101', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 101, 104]]))[0][0] * 180 / numpy.pi
CV187: dihedral between atoms ['101', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV188: dihedral between atoms ['101', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV189: dihedral between atoms ['104', '101', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 101, 104]]))[0][0] * 180 / numpy.pi
CV190: dihedral between atoms ['102', '101', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 102, 104]]))[0][0] * 180 / numpy.pi
CV191: dihedral between atoms ['101', '103', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 106]]))[0][0] * 180 / numpy.pi
CV192: dihedral between atoms ['101', '103', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 119]]))[0][0] * 180 / numpy.pi
CV193: dihedral between atoms ['104', '101', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 102, 104]]))[0][0] * 180 / numpy.pi
CV194: dihedral between atoms ['103', '101', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 103, 104]]))[0][0] * 180 / numpy.pi
CV195: dihedral between atoms ['102', '101', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 103, 104]]))[0][0] * 180 / numpy.pi
CV196: dihedral between atoms ['101', '104', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 104, 106]]))[0][0] * 180 / numpy.pi
CV197: dihedral between atoms ['101', '104', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 104, 119]]))[0][0] * 180 / numpy.pi
CV198: dihedral between atoms ['103', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV199: dihedral between atoms ['102', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV200: dihedral between atoms ['101', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV201: dihedral between atoms ['101', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV202: dihedral between atoms ['104', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV203: dihedral between atoms ['103', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV204: dihedral between atoms ['102', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV205: dihedral between atoms ['101', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV206: dihedral between atoms ['101', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV207: dihedral between atoms ['104', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV208: dihedral between atoms ['102', '101', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 102, 103]]))[0][0] * 180 / numpy.pi
CV209: dihedral between atoms ['102', '101', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 102, 104]]))[0][0] * 180 / numpy.pi
CV210: dihedral between atoms ['104', '102', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 100, 102]]))[0][0] * 180 / numpy.pi
CV211: dihedral between atoms ['105', '102', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 101, 100, 102]]))[0][0] * 180 / numpy.pi
CV212: dihedral between atoms ['102', '104', '103', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 102, 100]]))[0][0] * 180 / numpy.pi
CV213: dihedral between atoms ['101', '102', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 103, 102]]))[0][0] * 180 / numpy.pi
CV214: dihedral between atoms ['102', '104', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 102, 104]]))[0][0] * 180 / numpy.pi
CV215: dihedral between atoms ['105', '102', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 101, 103, 102]]))[0][0] * 180 / numpy.pi
CV216: dihedral between atoms ['102', '105', '103', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 102, 100]]))[0][0] * 180 / numpy.pi
CV217: dihedral between atoms ['101', '102', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 102]]))[0][0] * 180 / numpy.pi
CV218: dihedral between atoms ['102', '105', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 102, 103]]))[0][0] * 180 / numpy.pi
CV219: dihedral between atoms ['104', '102', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 102]]))[0][0] * 180 / numpy.pi
CV220: dihedral between atoms ['102', '101', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 103, 102]]))[0][0] * 180 / numpy.pi
CV221: dihedral between atoms ['103', '102', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 100, 103]]))[0][0] * 180 / numpy.pi
CV222: dihedral between atoms ['105', '102', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 101, 100, 103]]))[0][0] * 180 / numpy.pi
CV223: dihedral between atoms ['105', '102', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 101, 102, 103]]))[0][0] * 180 / numpy.pi
CV224: dihedral between atoms ['101', '102', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 103]]))[0][0] * 180 / numpy.pi
CV225: dihedral between atoms ['102', '105', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 103, 102]]))[0][0] * 180 / numpy.pi
CV226: dihedral between atoms ['103', '102', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 103]]))[0][0] * 180 / numpy.pi
CV227: dihedral between atoms ['102', '101', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 102]]))[0][0] * 180 / numpy.pi
CV228: dihedral between atoms ['102', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV229: dihedral between atoms ['102', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV230: dihedral between atoms ['103', '102', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 100, 104]]))[0][0] * 180 / numpy.pi
CV231: dihedral between atoms ['104', '102', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 100, 104]]))[0][0] * 180 / numpy.pi
CV232: dihedral between atoms ['102', '103', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 106]]))[0][0] * 180 / numpy.pi
CV233: dihedral between atoms ['102', '103', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 119]]))[0][0] * 180 / numpy.pi
CV234: dihedral between atoms ['104', '102', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 102, 104]]))[0][0] * 180 / numpy.pi
CV235: dihedral between atoms ['101', '102', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 103, 104]]))[0][0] * 180 / numpy.pi
CV236: dihedral between atoms ['102', '104', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 102]]))[0][0] * 180 / numpy.pi
CV237: dihedral between atoms ['102', '104', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 106]]))[0][0] * 180 / numpy.pi
CV238: dihedral between atoms ['102', '104', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 119]]))[0][0] * 180 / numpy.pi
CV239: dihedral between atoms ['103', '102', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 103, 104]]))[0][0] * 180 / numpy.pi
CV240: dihedral between atoms ['102', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV241: dihedral between atoms ['102', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV242: dihedral between atoms ['103', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV243: dihedral between atoms ['104', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV244: dihedral between atoms ['102', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV245: dihedral between atoms ['102', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV246: dihedral between atoms ['103', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV247: dihedral between atoms ['104', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV248: dihedral between atoms ['105', '103', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 102, 100, 103]]))[0][0] * 180 / numpy.pi
CV249: dihedral between atoms ['102', '103', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 100, 103]]))[0][0] * 180 / numpy.pi
CV250: dihedral between atoms ['101', '103', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 101, 103]]))[0][0] * 180 / numpy.pi
CV251: dihedral between atoms ['105', '103', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 102, 101, 103]]))[0][0] * 180 / numpy.pi
CV252: dihedral between atoms ['101', '103', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 103]]))[0][0] * 180 / numpy.pi
CV253: dihedral between atoms ['102', '103', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 103]]))[0][0] * 180 / numpy.pi
CV254: dihedral between atoms ['104', '103', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 100, 104]]))[0][0] * 180 / numpy.pi
CV255: dihedral between atoms ['103', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV256: dihedral between atoms ['103', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV257: dihedral between atoms ['102', '103', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 100, 104]]))[0][0] * 180 / numpy.pi
CV258: dihedral between atoms ['101', '103', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 101, 104]]))[0][0] * 180 / numpy.pi
CV259: dihedral between atoms ['104', '103', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 101, 104]]))[0][0] * 180 / numpy.pi
CV260: dihedral between atoms ['103', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV261: dihedral between atoms ['103', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV262: dihedral between atoms ['101', '103', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 103, 104]]))[0][0] * 180 / numpy.pi
CV263: dihedral between atoms ['103', '104', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 104, 106]]))[0][0] * 180 / numpy.pi
CV264: dihedral between atoms ['103', '104', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 104, 119]]))[0][0] * 180 / numpy.pi
CV265: dihedral between atoms ['102', '103', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 103, 104]]))[0][0] * 180 / numpy.pi
CV266: dihedral between atoms ['104', '103', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 106]]))[0][0] * 180 / numpy.pi
CV267: dihedral between atoms ['103', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV268: dihedral between atoms ['103', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV269: dihedral between atoms ['104', '103', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 119]]))[0][0] * 180 / numpy.pi
CV270: dihedral between atoms ['103', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV271: dihedral between atoms ['103', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV272: dihedral between atoms ['103', '104', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 100, 104]]))[0][0] * 180 / numpy.pi
CV273: dihedral between atoms ['104', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV274: dihedral between atoms ['104', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV275: dihedral between atoms ['102', '104', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 100, 104]]))[0][0] * 180 / numpy.pi
CV276: dihedral between atoms ['103', '104', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 101, 104]]))[0][0] * 180 / numpy.pi
CV277: dihedral between atoms ['104', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV278: dihedral between atoms ['104', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV279: dihedral between atoms ['101', '104', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 101, 104]]))[0][0] * 180 / numpy.pi
CV280: dihedral between atoms ['104', '103', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 106]]))[0][0] * 180 / numpy.pi
CV281: dihedral between atoms ['104', '103', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 119]]))[0][0] * 180 / numpy.pi
CV282: dihedral between atoms ['104', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV283: dihedral between atoms ['104', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV284: dihedral between atoms ['104', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV285: dihedral between atoms ['104', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV286: dihedral between atoms ['120', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV287: dihedral between atoms ['120', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV288: dihedral between atoms ['105', '107', '113', '116']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 112, 115]]))[0][0] * 180 / numpy.pi
CV289: dihedral between atoms ['107', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV290: dihedral between atoms ['107', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV291: dihedral between atoms ['105', '120', '122', '124']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 119, 121, 123]]))[0][0] * 180 / numpy.pi
CV292: dihedral between atoms ['109', '107', '113', '116']; mdtraj.compute_dihedrals(mtraj, numpy.array([[108, 106, 112, 115]]))[0][0] * 180 / numpy.pi
CV293: dihedral between atoms ['109', '107', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[108, 106, 104, 119]]))[0][0] * 180 / numpy.pi
CV294: dihedral between atoms ['113', '107', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[112, 106, 104, 119]]))[0][0] * 180 / numpy.pi
CV295: dihedral between atoms ['107', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV296: dihedral between atoms ['107', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV297: dihedral between atoms ['109', '107', '113', '116']; mdtraj.compute_dihedrals(mtraj, numpy.array([[108, 106, 112, 115]]))[0][0] * 180 / numpy.pi
CV298: dihedral between atoms ['121', '120', '122', '124']; mdtraj.compute_dihedrals(mtraj, numpy.array([[120, 119, 121, 123]]))[0][0] * 180 / numpy.pi
CV299: dihedral between atoms ['120', '122', '124', '126']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 121, 123, 125]]))[0][0] * 180 / numpy.pi
CV300: dihedral between atoms ['120', '122', '124', '132']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 121, 123, 131]]))[0][0] * 180 / numpy.pi
CV301: dihedral between atoms ['121', '120', '122', '124']; mdtraj.compute_dihedrals(mtraj, numpy.array([[120, 119, 121, 123]]))[0][0] * 180 / numpy.pi
CV302: dihedral between atoms ['122', '124', '132', '134']; mdtraj.compute_dihedrals(mtraj, numpy.array([[121, 123, 131, 133]]))[0][0] * 180 / numpy.pi
CV303: dihedral between atoms ['122', '124', '132', '133']; mdtraj.compute_dihedrals(mtraj, numpy.array([[121, 123, 131, 132]]))[0][0] * 180 / numpy.pi
CV304: dihedral between atoms ['126', '124', '132', '133']; mdtraj.compute_dihedrals(mtraj, numpy.array([[125, 123, 131, 132]]))[0][0] * 180 / numpy.pi
CV305: dihedral between atoms ['126', '124', '132', '134']; mdtraj.compute_dihedrals(mtraj, numpy.array([[125, 123, 131, 133]]))[0][0] * 180 / numpy.pi
CV306: dihedral between atoms ['124', '132', '134', '136']; mdtraj.compute_dihedrals(mtraj, numpy.array([[123, 131, 133, 135]]))[0][0] * 180 / numpy.pi
CV307: dihedral between atoms ['126', '124', '132', '134']; mdtraj.compute_dihedrals(mtraj, numpy.array([[125, 123, 131, 133]]))[0][0] * 180 / numpy.pi
CV308: dihedral between atoms ['126', '124', '132', '133']; mdtraj.compute_dihedrals(mtraj, numpy.array([[125, 123, 131, 132]]))[0][0] * 180 / numpy.pi
CV309: dihedral between atoms ['133', '132', '134', '136']; mdtraj.compute_dihedrals(mtraj, numpy.array([[132, 131, 133, 135]]))[0][0] * 180 / numpy.pi
CV310: dihedral between atoms ['132', '134', '136', '138']; mdtraj.compute_dihedrals(mtraj, numpy.array([[131, 133, 135, 137]]))[0][0] * 180 / numpy.pi
CV311: dihedral between atoms ['132', '134', '136', '151']; mdtraj.compute_dihedrals(mtraj, numpy.array([[131, 133, 135, 150]]))[0][0] * 180 / numpy.pi
CV312: dihedral between atoms ['133', '132', '134', '136']; mdtraj.compute_dihedrals(mtraj, numpy.array([[132, 131, 133, 135]]))[0][0] * 180 / numpy.pi
CV313: dihedral between atoms ['134', '136', '138', '141']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 137, 140]]))[0][0] * 180 / numpy.pi
CV314: dihedral between atoms ['134', '136', '151', '153']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 150, 152]]))[0][0] * 180 / numpy.pi
CV315: dihedral between atoms ['134', '136', '151', '152']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 150, 151]]))[0][0] * 180 / numpy.pi
CV316: dihedral between atoms ['151', '136', '138', '141']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 135, 137, 140]]))[0][0] * 180 / numpy.pi
CV317: dihedral between atoms ['136', '138', '141', '147']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 137, 140, 146]]))[0][0] * 180 / numpy.pi
CV318: dihedral between atoms ['138', '136', '151', '152']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 135, 150, 151]]))[0][0] * 180 / numpy.pi
CV319: dihedral between atoms ['138', '136', '151', '153']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 135, 150, 152]]))[0][0] * 180 / numpy.pi
CV320: dihedral between atoms ['136', '151', '153', '155']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 150, 152, 154]]))[0][0] * 180 / numpy.pi
CV321: dihedral between atoms ['141', '138', '136', '151']; mdtraj.compute_dihedrals(mtraj, numpy.array([[140, 137, 135, 150]]))[0][0] * 180 / numpy.pi
CV322: dihedral between atoms ['138', '136', '151', '153']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 135, 150, 152]]))[0][0] * 180 / numpy.pi
CV323: dihedral between atoms ['138', '136', '151', '152']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 135, 150, 151]]))[0][0] * 180 / numpy.pi
CV324: dihedral between atoms ['152', '151', '153', '155']; mdtraj.compute_dihedrals(mtraj, numpy.array([[151, 150, 152, 154]]))[0][0] * 180 / numpy.pi
CV325: dihedral between atoms ['151', '153', '155', '157']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 152, 154, 156]]))[0][0] * 180 / numpy.pi
CV326: dihedral between atoms ['151', '153', '155', '167']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 152, 154, 166]]))[0][0] * 180 / numpy.pi
CV327: dihedral between atoms ['152', '151', '153', '155']; mdtraj.compute_dihedrals(mtraj, numpy.array([[151, 150, 152, 154]]))[0][0] * 180 / numpy.pi
CV328: dihedral between atoms ['153', '155', '157', '159']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 156, 158]]))[0][0] * 180 / numpy.pi
CV329: dihedral between atoms ['153', '155', '157', '163']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 156, 162]]))[0][0] * 180 / numpy.pi
CV330: dihedral between atoms ['153', '155', '167', '169']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 166, 168]]))[0][0] * 180 / numpy.pi
CV331: dihedral between atoms ['167', '155', '157', '159']; mdtraj.compute_dihedrals(mtraj, numpy.array([[166, 154, 156, 158]]))[0][0] * 180 / numpy.pi
CV332: dihedral between atoms ['167', '155', '157', '163']; mdtraj.compute_dihedrals(mtraj, numpy.array([[166, 154, 156, 162]]))[0][0] * 180 / numpy.pi
CV333: dihedral between atoms ['157', '155', '167', '169']; mdtraj.compute_dihedrals(mtraj, numpy.array([[156, 154, 166, 168]]))[0][0] * 180 / numpy.pi
CV334: dihedral between atoms ['159', '157', '155', '167']; mdtraj.compute_dihedrals(mtraj, numpy.array([[158, 156, 154, 166]]))[0][0] * 180 / numpy.pi
CV335: dihedral between atoms ['163', '157', '155', '167']; mdtraj.compute_dihedrals(mtraj, numpy.array([[162, 156, 154, 166]]))[0][0] * 180 / numpy.pi
CV336: dihedral between atoms ['157', '155', '167', '169']; mdtraj.compute_dihedrals(mtraj, numpy.array([[156, 154, 166, 168]]))[0][0] * 180 / numpy.pi
CV337: difference of distances between atoms [102, 104] and [102, 105]; (mdtraj.compute_distances(mtraj, numpy.array([[101, 103]]))[0][0] * 10) - (mdtraj.compute_distances(mtraj, numpy.array([[101, 104]]))[0][0] * 10)
CV338: user-defined CV; pytraj.distance(traj, '@1 @2')[0]
CV339: user-defined CV; pytraj.angle(traj, '@2 @3 @4')[0]
