CV name: description of CV (atoms are indexed from 1); code to evaluate CV
CV1: distance between atoms ['84', '85']; mdtraj.compute_distances(mtraj, numpy.array([[83, 84]]))[0][0] * 10
CV2: distance between atoms ['82', '84']; mdtraj.compute_distances(mtraj, numpy.array([[81, 83]]))[0][0] * 10
CV3: distance between atoms ['84', '86']; mdtraj.compute_distances(mtraj, numpy.array([[83, 85]]))[0][0] * 10
CV4: distance between atoms ['91', '84']; mdtraj.compute_distances(mtraj, numpy.array([[90, 83]]))[0][0] * 10
CV5: distance between atoms ['86', '87']; mdtraj.compute_distances(mtraj, numpy.array([[85, 86]]))[0][0] * 10
CV6: distance between atoms ['86', '88']; mdtraj.compute_distances(mtraj, numpy.array([[85, 87]]))[0][0] * 10
CV7: distance between atoms ['89', '86']; mdtraj.compute_distances(mtraj, numpy.array([[88, 85]]))[0][0] * 10
CV8: distance between atoms ['89', '90']; mdtraj.compute_distances(mtraj, numpy.array([[88, 89]]))[0][0] * 10
CV9: distance between atoms ['91', '93']; mdtraj.compute_distances(mtraj, numpy.array([[90, 92]]))[0][0] * 10
CV10: distance between atoms ['91', '92']; mdtraj.compute_distances(mtraj, numpy.array([[90, 91]]))[0][0] * 10
CV11: distance between atoms ['93', '94']; mdtraj.compute_distances(mtraj, numpy.array([[92, 93]]))[0][0] * 10
CV12: distance between atoms ['93', '95']; mdtraj.compute_distances(mtraj, numpy.array([[92, 94]]))[0][0] * 10
CV13: distance between atoms ['95', '96']; mdtraj.compute_distances(mtraj, numpy.array([[94, 95]]))[0][0] * 10
CV14: distance between atoms ['97', '95']; mdtraj.compute_distances(mtraj, numpy.array([[96, 94]]))[0][0] * 10
CV15: distance between atoms ['101', '95']; mdtraj.compute_distances(mtraj, numpy.array([[100, 94]]))[0][0] * 10
CV16: distance between atoms ['97', '98']; mdtraj.compute_distances(mtraj, numpy.array([[96, 97]]))[0][0] * 10
CV17: distance between atoms ['97', '99']; mdtraj.compute_distances(mtraj, numpy.array([[96, 98]]))[0][0] * 10
CV18: distance between atoms ['97', '100']; mdtraj.compute_distances(mtraj, numpy.array([[96, 99]]))[0][0] * 10
CV19: distance between atoms ['101', '103']; mdtraj.compute_distances(mtraj, numpy.array([[100, 102]]))[0][0] * 10
CV20: distance between atoms ['101', '102']; mdtraj.compute_distances(mtraj, numpy.array([[100, 101]]))[0][0] * 10
CV21: distance between atoms ['103', '104']; mdtraj.compute_distances(mtraj, numpy.array([[102, 103]]))[0][0] * 10
CV22: distance between atoms ['105', '103']; mdtraj.compute_distances(mtraj, numpy.array([[104, 102]]))[0][0] * 10
CV23: distance between atoms ['105', '106']; mdtraj.compute_distances(mtraj, numpy.array([[104, 105]]))[0][0] * 10
CV24: distance between atoms ['105', '107']; mdtraj.compute_distances(mtraj, numpy.array([[104, 106]]))[0][0] * 10
CV25: distance between atoms ['105', '120']; mdtraj.compute_distances(mtraj, numpy.array([[104, 119]]))[0][0] * 10
CV26: distance between atoms ['107', '108']; mdtraj.compute_distances(mtraj, numpy.array([[106, 107]]))[0][0] * 10
CV27: distance between atoms ['107', '109']; mdtraj.compute_distances(mtraj, numpy.array([[106, 108]]))[0][0] * 10
CV28: distance between atoms ['113', '107']; mdtraj.compute_distances(mtraj, numpy.array([[112, 106]]))[0][0] * 10
CV29: distance between atoms ['109', '110']; mdtraj.compute_distances(mtraj, numpy.array([[108, 109]]))[0][0] * 10
CV30: distance between atoms ['109', '111']; mdtraj.compute_distances(mtraj, numpy.array([[108, 110]]))[0][0] * 10
CV31: distance between atoms ['109', '112']; mdtraj.compute_distances(mtraj, numpy.array([[108, 111]]))[0][0] * 10
CV32: distance between atoms ['113', '114']; mdtraj.compute_distances(mtraj, numpy.array([[112, 113]]))[0][0] * 10
CV33: distance between atoms ['113', '115']; mdtraj.compute_distances(mtraj, numpy.array([[112, 114]]))[0][0] * 10
CV34: distance between atoms ['113', '116']; mdtraj.compute_distances(mtraj, numpy.array([[112, 115]]))[0][0] * 10
CV35: distance between atoms ['116', '117']; mdtraj.compute_distances(mtraj, numpy.array([[115, 116]]))[0][0] * 10
CV36: distance between atoms ['116', '118']; mdtraj.compute_distances(mtraj, numpy.array([[115, 117]]))[0][0] * 10
CV37: distance between atoms ['116', '119']; mdtraj.compute_distances(mtraj, numpy.array([[115, 118]]))[0][0] * 10
CV38: distance between atoms ['122', '120']; mdtraj.compute_distances(mtraj, numpy.array([[121, 119]]))[0][0] * 10
CV39: distance between atoms ['121', '120']; mdtraj.compute_distances(mtraj, numpy.array([[120, 119]]))[0][0] * 10
CV40: distance between atoms ['122', '123']; mdtraj.compute_distances(mtraj, numpy.array([[121, 122]]))[0][0] * 10
CV41: distance between atoms ['122', '124']; mdtraj.compute_distances(mtraj, numpy.array([[121, 123]]))[0][0] * 10
CV42: distance between atoms ['124', '125']; mdtraj.compute_distances(mtraj, numpy.array([[123, 124]]))[0][0] * 10
CV43: distance between atoms ['124', '126']; mdtraj.compute_distances(mtraj, numpy.array([[123, 125]]))[0][0] * 10
CV44: distance between atoms ['124', '132']; mdtraj.compute_distances(mtraj, numpy.array([[123, 131]]))[0][0] * 10
CV45: distance between atoms ['126', '127']; mdtraj.compute_distances(mtraj, numpy.array([[125, 126]]))[0][0] * 10
CV46: distance between atoms ['126', '128']; mdtraj.compute_distances(mtraj, numpy.array([[125, 127]]))[0][0] * 10
CV47: distance between atoms ['129', '126']; mdtraj.compute_distances(mtraj, numpy.array([[128, 125]]))[0][0] * 10
CV48: distance between atoms ['132', '134']; mdtraj.compute_distances(mtraj, numpy.array([[131, 133]]))[0][0] * 10
CV49: distance between atoms ['132', '133']; mdtraj.compute_distances(mtraj, numpy.array([[131, 132]]))[0][0] * 10
CV50: distance between atoms ['134', '135']; mdtraj.compute_distances(mtraj, numpy.array([[133, 134]]))[0][0] * 10
CV51: distance between atoms ['134', '136']; mdtraj.compute_distances(mtraj, numpy.array([[133, 135]]))[0][0] * 10
CV52: distance between atoms ['137', '136']; mdtraj.compute_distances(mtraj, numpy.array([[136, 135]]))[0][0] * 10
CV53: distance between atoms ['138', '136']; mdtraj.compute_distances(mtraj, numpy.array([[137, 135]]))[0][0] * 10
CV54: distance between atoms ['151', '136']; mdtraj.compute_distances(mtraj, numpy.array([[150, 135]]))[0][0] * 10
CV55: distance between atoms ['138', '139']; mdtraj.compute_distances(mtraj, numpy.array([[137, 138]]))[0][0] * 10
CV56: distance between atoms ['138', '140']; mdtraj.compute_distances(mtraj, numpy.array([[137, 139]]))[0][0] * 10
CV57: distance between atoms ['138', '141']; mdtraj.compute_distances(mtraj, numpy.array([[137, 140]]))[0][0] * 10
CV58: distance between atoms ['141', '142']; mdtraj.compute_distances(mtraj, numpy.array([[140, 141]]))[0][0] * 10
CV59: distance between atoms ['141', '143']; mdtraj.compute_distances(mtraj, numpy.array([[140, 142]]))[0][0] * 10
CV60: distance between atoms ['147', '141']; mdtraj.compute_distances(mtraj, numpy.array([[146, 140]]))[0][0] * 10
CV61: distance between atoms ['147', '148']; mdtraj.compute_distances(mtraj, numpy.array([[146, 147]]))[0][0] * 10
CV62: distance between atoms ['147', '149']; mdtraj.compute_distances(mtraj, numpy.array([[146, 148]]))[0][0] * 10
CV63: distance between atoms ['147', '150']; mdtraj.compute_distances(mtraj, numpy.array([[146, 149]]))[0][0] * 10
CV64: distance between atoms ['153', '151']; mdtraj.compute_distances(mtraj, numpy.array([[152, 150]]))[0][0] * 10
CV65: distance between atoms ['151', '152']; mdtraj.compute_distances(mtraj, numpy.array([[150, 151]]))[0][0] * 10
CV66: distance between atoms ['153', '154']; mdtraj.compute_distances(mtraj, numpy.array([[152, 153]]))[0][0] * 10
CV67: distance between atoms ['153', '155']; mdtraj.compute_distances(mtraj, numpy.array([[152, 154]]))[0][0] * 10
CV68: distance between atoms ['155', '156']; mdtraj.compute_distances(mtraj, numpy.array([[154, 155]]))[0][0] * 10
CV69: distance between atoms ['155', '157']; mdtraj.compute_distances(mtraj, numpy.array([[154, 156]]))[0][0] * 10
CV70: distance between atoms ['155', '167']; mdtraj.compute_distances(mtraj, numpy.array([[154, 166]]))[0][0] * 10
CV71: distance between atoms ['157', '158']; mdtraj.compute_distances(mtraj, numpy.array([[156, 157]]))[0][0] * 10
CV72: distance between atoms ['157', '159']; mdtraj.compute_distances(mtraj, numpy.array([[156, 158]]))[0][0] * 10
CV73: distance between atoms ['163', '157']; mdtraj.compute_distances(mtraj, numpy.array([[162, 156]]))[0][0] * 10
CV74: distance between atoms ['159', '160']; mdtraj.compute_distances(mtraj, numpy.array([[158, 159]]))[0][0] * 10
CV75: distance between atoms ['161', '159']; mdtraj.compute_distances(mtraj, numpy.array([[160, 158]]))[0][0] * 10
CV76: distance between atoms ['162', '159']; mdtraj.compute_distances(mtraj, numpy.array([[161, 158]]))[0][0] * 10
CV77: distance between atoms ['163', '164']; mdtraj.compute_distances(mtraj, numpy.array([[162, 163]]))[0][0] * 10
CV78: distance between atoms ['163', '165']; mdtraj.compute_distances(mtraj, numpy.array([[162, 164]]))[0][0] * 10
CV79: distance between atoms ['163', '166']; mdtraj.compute_distances(mtraj, numpy.array([[162, 165]]))[0][0] * 10
CV80: distance between atoms ['169', '167']; mdtraj.compute_distances(mtraj, numpy.array([[168, 166]]))[0][0] * 10
CV81: distance between atoms ['167', '168']; mdtraj.compute_distances(mtraj, numpy.array([[166, 167]]))[0][0] * 10
CV82: distance between atoms ['169', '170']; mdtraj.compute_distances(mtraj, numpy.array([[168, 169]]))[0][0] * 10
CV83: distance between atoms ['169', '171']; mdtraj.compute_distances(mtraj, numpy.array([[168, 170]]))[0][0] * 10
CV84: distance between atoms ['2978', '2979']; mdtraj.compute_distances(mtraj, numpy.array([[2977, 2978]]))[0][0] * 10
CV85: distance between atoms ['3393', '3392']; mdtraj.compute_distances(mtraj, numpy.array([[3392, 3391]]))[0][0] * 10
CV86: distance between atoms ['3395', '3396']; mdtraj.compute_distances(mtraj, numpy.array([[3394, 3395]]))[0][0] * 10
CV87: distance between atoms ['3395', '3398']; mdtraj.compute_distances(mtraj, numpy.array([[3394, 3397]]))[0][0] * 10
CV88: distance between atoms ['4089', '4090']; mdtraj.compute_distances(mtraj, numpy.array([[4088, 4089]]))[0][0] * 10
CV89: distance between atoms ['4117', '4118']; mdtraj.compute_distances(mtraj, numpy.array([[4116, 4117]]))[0][0] * 10
CV90: distance between atoms ['4119', '4120']; mdtraj.compute_distances(mtraj, numpy.array([[4118, 4119]]))[0][0] * 10
CV91: distance between atoms ['4121', '4119']; mdtraj.compute_distances(mtraj, numpy.array([[4120, 4118]]))[0][0] * 10
CV92: distance between atoms ['4122', '4119']; mdtraj.compute_distances(mtraj, numpy.array([[4121, 4118]]))[0][0] * 10
CV93: distance between atoms ['4117', '4119']; mdtraj.compute_distances(mtraj, numpy.array([[4116, 4118]]))[0][0] * 10
CV94: distance between atoms ['101', '104']; mdtraj.compute_distances(mtraj, numpy.array([[100, 103]]))[0][0] * 10
CV95: distance between atoms ['101', '105']; mdtraj.compute_distances(mtraj, numpy.array([[100, 104]]))[0][0] * 10
CV96: distance between atoms ['102', '103']; mdtraj.compute_distances(mtraj, numpy.array([[101, 102]]))[0][0] * 10
CV97: distance between atoms ['102', '104']; mdtraj.compute_distances(mtraj, numpy.array([[101, 103]]))[0][0] * 10
CV98: distance between atoms ['102', '105']; mdtraj.compute_distances(mtraj, numpy.array([[101, 104]]))[0][0] * 10
CV99: distance between atoms ['104', '105']; mdtraj.compute_distances(mtraj, numpy.array([[103, 104]]))[0][0] * 10
CV100: angle between atoms ['84', '86', '87']; mdtraj.compute_angles(mtraj, numpy.array([[83, 85, 86]]))[0][0] * 180 / numpy.pi
CV101: angle between atoms ['84', '86', '88']; mdtraj.compute_angles(mtraj, numpy.array([[83, 85, 87]]))[0][0] * 180 / numpy.pi
CV102: angle between atoms ['84', '86', '89']; mdtraj.compute_angles(mtraj, numpy.array([[83, 85, 88]]))[0][0] * 180 / numpy.pi
CV103: angle between atoms ['84', '91', '92']; mdtraj.compute_angles(mtraj, numpy.array([[83, 90, 91]]))[0][0] * 180 / numpy.pi
CV104: angle between atoms ['84', '91', '93']; mdtraj.compute_angles(mtraj, numpy.array([[83, 90, 92]]))[0][0] * 180 / numpy.pi
CV105: angle between atoms ['85', '84', '86']; mdtraj.compute_angles(mtraj, numpy.array([[84, 83, 85]]))[0][0] * 180 / numpy.pi
CV106: angle between atoms ['85', '84', '91']; mdtraj.compute_angles(mtraj, numpy.array([[84, 83, 90]]))[0][0] * 180 / numpy.pi
CV107: angle between atoms ['86', '89', '90']; mdtraj.compute_angles(mtraj, numpy.array([[85, 88, 89]]))[0][0] * 180 / numpy.pi
CV108: angle between atoms ['86', '84', '91']; mdtraj.compute_angles(mtraj, numpy.array([[85, 83, 90]]))[0][0] * 180 / numpy.pi
CV109: angle between atoms ['87', '86', '88']; mdtraj.compute_angles(mtraj, numpy.array([[86, 85, 87]]))[0][0] * 180 / numpy.pi
CV110: angle between atoms ['87', '86', '89']; mdtraj.compute_angles(mtraj, numpy.array([[86, 85, 88]]))[0][0] * 180 / numpy.pi
CV111: angle between atoms ['88', '86', '89']; mdtraj.compute_angles(mtraj, numpy.array([[87, 85, 88]]))[0][0] * 180 / numpy.pi
CV112: angle between atoms ['91', '93', '94']; mdtraj.compute_angles(mtraj, numpy.array([[90, 92, 93]]))[0][0] * 180 / numpy.pi
CV113: angle between atoms ['91', '93', '95']; mdtraj.compute_angles(mtraj, numpy.array([[90, 92, 94]]))[0][0] * 180 / numpy.pi
CV114: angle between atoms ['92', '91', '93']; mdtraj.compute_angles(mtraj, numpy.array([[91, 90, 92]]))[0][0] * 180 / numpy.pi
CV115: angle between atoms ['93', '95', '96']; mdtraj.compute_angles(mtraj, numpy.array([[92, 94, 95]]))[0][0] * 180 / numpy.pi
CV116: angle between atoms ['93', '95', '97']; mdtraj.compute_angles(mtraj, numpy.array([[92, 94, 96]]))[0][0] * 180 / numpy.pi
CV117: angle between atoms ['93', '95', '101']; mdtraj.compute_angles(mtraj, numpy.array([[92, 94, 100]]))[0][0] * 180 / numpy.pi
CV118: angle between atoms ['94', '93', '95']; mdtraj.compute_angles(mtraj, numpy.array([[93, 92, 94]]))[0][0] * 180 / numpy.pi
CV119: angle between atoms ['95', '97', '98']; mdtraj.compute_angles(mtraj, numpy.array([[94, 96, 97]]))[0][0] * 180 / numpy.pi
CV120: angle between atoms ['95', '97', '99']; mdtraj.compute_angles(mtraj, numpy.array([[94, 96, 98]]))[0][0] * 180 / numpy.pi
CV121: angle between atoms ['95', '97', '100']; mdtraj.compute_angles(mtraj, numpy.array([[94, 96, 99]]))[0][0] * 180 / numpy.pi
CV122: angle between atoms ['95', '101', '102']; mdtraj.compute_angles(mtraj, numpy.array([[94, 100, 101]]))[0][0] * 180 / numpy.pi
CV123: angle between atoms ['95', '101', '103']; mdtraj.compute_angles(mtraj, numpy.array([[94, 100, 102]]))[0][0] * 180 / numpy.pi
CV124: angle between atoms ['95', '101', '104']; mdtraj.compute_angles(mtraj, numpy.array([[94, 100, 103]]))[0][0] * 180 / numpy.pi
CV125: angle between atoms ['95', '101', '105']; mdtraj.compute_angles(mtraj, numpy.array([[94, 100, 104]]))[0][0] * 180 / numpy.pi
CV126: angle between atoms ['96', '95', '97']; mdtraj.compute_angles(mtraj, numpy.array([[95, 94, 96]]))[0][0] * 180 / numpy.pi
CV127: angle between atoms ['96', '95', '101']; mdtraj.compute_angles(mtraj, numpy.array([[95, 94, 100]]))[0][0] * 180 / numpy.pi
CV128: angle between atoms ['97', '95', '101']; mdtraj.compute_angles(mtraj, numpy.array([[96, 94, 100]]))[0][0] * 180 / numpy.pi
CV129: angle between atoms ['98', '97', '99']; mdtraj.compute_angles(mtraj, numpy.array([[97, 96, 98]]))[0][0] * 180 / numpy.pi
CV130: angle between atoms ['98', '97', '100']; mdtraj.compute_angles(mtraj, numpy.array([[97, 96, 99]]))[0][0] * 180 / numpy.pi
CV131: angle between atoms ['99', '97', '100']; mdtraj.compute_angles(mtraj, numpy.array([[98, 96, 99]]))[0][0] * 180 / numpy.pi
CV132: angle between atoms ['101', '103', '102']; mdtraj.compute_angles(mtraj, numpy.array([[100, 102, 101]]))[0][0] * 180 / numpy.pi
CV133: angle between atoms ['101', '104', '102']; mdtraj.compute_angles(mtraj, numpy.array([[100, 103, 101]]))[0][0] * 180 / numpy.pi
CV134: angle between atoms ['101', '105', '102']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 101]]))[0][0] * 180 / numpy.pi
CV135: angle between atoms ['101', '102', '103']; mdtraj.compute_angles(mtraj, numpy.array([[100, 101, 102]]))[0][0] * 180 / numpy.pi
CV136: angle between atoms ['101', '104', '103']; mdtraj.compute_angles(mtraj, numpy.array([[100, 103, 102]]))[0][0] * 180 / numpy.pi
CV137: angle between atoms ['101', '105', '103']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 102]]))[0][0] * 180 / numpy.pi
CV138: angle between atoms ['101', '102', '104']; mdtraj.compute_angles(mtraj, numpy.array([[100, 101, 103]]))[0][0] * 180 / numpy.pi
CV139: angle between atoms ['101', '103', '104']; mdtraj.compute_angles(mtraj, numpy.array([[100, 102, 103]]))[0][0] * 180 / numpy.pi
CV140: angle between atoms ['101', '105', '104']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 103]]))[0][0] * 180 / numpy.pi
CV141: angle between atoms ['101', '102', '105']; mdtraj.compute_angles(mtraj, numpy.array([[100, 101, 104]]))[0][0] * 180 / numpy.pi
CV142: angle between atoms ['101', '103', '105']; mdtraj.compute_angles(mtraj, numpy.array([[100, 102, 104]]))[0][0] * 180 / numpy.pi
CV143: angle between atoms ['101', '104', '105']; mdtraj.compute_angles(mtraj, numpy.array([[100, 103, 104]]))[0][0] * 180 / numpy.pi
CV144: angle between atoms ['101', '105', '106']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 105]]))[0][0] * 180 / numpy.pi
CV145: angle between atoms ['101', '105', '107']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 106]]))[0][0] * 180 / numpy.pi
CV146: angle between atoms ['101', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[100, 104, 119]]))[0][0] * 180 / numpy.pi
CV147: angle between atoms ['102', '101', '103']; mdtraj.compute_angles(mtraj, numpy.array([[101, 100, 102]]))[0][0] * 180 / numpy.pi
CV148: angle between atoms ['102', '104', '103']; mdtraj.compute_angles(mtraj, numpy.array([[101, 103, 102]]))[0][0] * 180 / numpy.pi
CV149: angle between atoms ['102', '105', '103']; mdtraj.compute_angles(mtraj, numpy.array([[101, 104, 102]]))[0][0] * 180 / numpy.pi
CV150: angle between atoms ['102', '101', '104']; mdtraj.compute_angles(mtraj, numpy.array([[101, 100, 103]]))[0][0] * 180 / numpy.pi
CV151: angle between atoms ['102', '103', '104']; mdtraj.compute_angles(mtraj, numpy.array([[101, 102, 103]]))[0][0] * 180 / numpy.pi
CV152: angle between atoms ['102', '105', '104']; mdtraj.compute_angles(mtraj, numpy.array([[101, 104, 103]]))[0][0] * 180 / numpy.pi
CV153: angle between atoms ['102', '101', '105']; mdtraj.compute_angles(mtraj, numpy.array([[101, 100, 104]]))[0][0] * 180 / numpy.pi
CV154: angle between atoms ['102', '103', '105']; mdtraj.compute_angles(mtraj, numpy.array([[101, 102, 104]]))[0][0] * 180 / numpy.pi
CV155: angle between atoms ['102', '104', '105']; mdtraj.compute_angles(mtraj, numpy.array([[101, 103, 104]]))[0][0] * 180 / numpy.pi
CV156: angle between atoms ['102', '105', '106']; mdtraj.compute_angles(mtraj, numpy.array([[101, 104, 105]]))[0][0] * 180 / numpy.pi
CV157: angle between atoms ['102', '105', '107']; mdtraj.compute_angles(mtraj, numpy.array([[101, 104, 106]]))[0][0] * 180 / numpy.pi
CV158: angle between atoms ['102', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[101, 104, 119]]))[0][0] * 180 / numpy.pi
CV159: angle between atoms ['103', '101', '104']; mdtraj.compute_angles(mtraj, numpy.array([[102, 100, 103]]))[0][0] * 180 / numpy.pi
CV160: angle between atoms ['103', '102', '104']; mdtraj.compute_angles(mtraj, numpy.array([[102, 101, 103]]))[0][0] * 180 / numpy.pi
CV161: angle between atoms ['103', '105', '104']; mdtraj.compute_angles(mtraj, numpy.array([[102, 104, 103]]))[0][0] * 180 / numpy.pi
CV162: angle between atoms ['103', '101', '105']; mdtraj.compute_angles(mtraj, numpy.array([[102, 100, 104]]))[0][0] * 180 / numpy.pi
CV163: angle between atoms ['103', '102', '105']; mdtraj.compute_angles(mtraj, numpy.array([[102, 101, 104]]))[0][0] * 180 / numpy.pi
CV164: angle between atoms ['103', '104', '105']; mdtraj.compute_angles(mtraj, numpy.array([[102, 103, 104]]))[0][0] * 180 / numpy.pi
CV165: angle between atoms ['103', '105', '106']; mdtraj.compute_angles(mtraj, numpy.array([[102, 104, 105]]))[0][0] * 180 / numpy.pi
CV166: angle between atoms ['103', '105', '107']; mdtraj.compute_angles(mtraj, numpy.array([[102, 104, 106]]))[0][0] * 180 / numpy.pi
CV167: angle between atoms ['103', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[102, 104, 119]]))[0][0] * 180 / numpy.pi
CV168: angle between atoms ['104', '101', '105']; mdtraj.compute_angles(mtraj, numpy.array([[103, 100, 104]]))[0][0] * 180 / numpy.pi
CV169: angle between atoms ['104', '102', '105']; mdtraj.compute_angles(mtraj, numpy.array([[103, 101, 104]]))[0][0] * 180 / numpy.pi
CV170: angle between atoms ['104', '103', '105']; mdtraj.compute_angles(mtraj, numpy.array([[103, 102, 104]]))[0][0] * 180 / numpy.pi
CV171: angle between atoms ['104', '105', '106']; mdtraj.compute_angles(mtraj, numpy.array([[103, 104, 105]]))[0][0] * 180 / numpy.pi
CV172: angle between atoms ['104', '105', '107']; mdtraj.compute_angles(mtraj, numpy.array([[103, 104, 106]]))[0][0] * 180 / numpy.pi
CV173: angle between atoms ['104', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[103, 104, 119]]))[0][0] * 180 / numpy.pi
CV174: angle between atoms ['105', '107', '108']; mdtraj.compute_angles(mtraj, numpy.array([[104, 106, 107]]))[0][0] * 180 / numpy.pi
CV175: angle between atoms ['105', '107', '109']; mdtraj.compute_angles(mtraj, numpy.array([[104, 106, 108]]))[0][0] * 180 / numpy.pi
CV176: angle between atoms ['105', '107', '113']; mdtraj.compute_angles(mtraj, numpy.array([[104, 106, 112]]))[0][0] * 180 / numpy.pi
CV177: angle between atoms ['105', '120', '121']; mdtraj.compute_angles(mtraj, numpy.array([[104, 119, 120]]))[0][0] * 180 / numpy.pi
CV178: angle between atoms ['105', '120', '122']; mdtraj.compute_angles(mtraj, numpy.array([[104, 119, 121]]))[0][0] * 180 / numpy.pi
CV179: angle between atoms ['106', '105', '107']; mdtraj.compute_angles(mtraj, numpy.array([[105, 104, 106]]))[0][0] * 180 / numpy.pi
CV180: angle between atoms ['106', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[105, 104, 119]]))[0][0] * 180 / numpy.pi
CV181: angle between atoms ['107', '109', '110']; mdtraj.compute_angles(mtraj, numpy.array([[106, 108, 109]]))[0][0] * 180 / numpy.pi
CV182: angle between atoms ['107', '109', '111']; mdtraj.compute_angles(mtraj, numpy.array([[106, 108, 110]]))[0][0] * 180 / numpy.pi
CV183: angle between atoms ['107', '109', '112']; mdtraj.compute_angles(mtraj, numpy.array([[106, 108, 111]]))[0][0] * 180 / numpy.pi
CV184: angle between atoms ['107', '113', '114']; mdtraj.compute_angles(mtraj, numpy.array([[106, 112, 113]]))[0][0] * 180 / numpy.pi
CV185: angle between atoms ['107', '113', '115']; mdtraj.compute_angles(mtraj, numpy.array([[106, 112, 114]]))[0][0] * 180 / numpy.pi
CV186: angle between atoms ['107', '113', '116']; mdtraj.compute_angles(mtraj, numpy.array([[106, 112, 115]]))[0][0] * 180 / numpy.pi
CV187: angle between atoms ['107', '105', '120']; mdtraj.compute_angles(mtraj, numpy.array([[106, 104, 119]]))[0][0] * 180 / numpy.pi
CV188: angle between atoms ['108', '107', '109']; mdtraj.compute_angles(mtraj, numpy.array([[107, 106, 108]]))[0][0] * 180 / numpy.pi
CV189: angle between atoms ['108', '107', '113']; mdtraj.compute_angles(mtraj, numpy.array([[107, 106, 112]]))[0][0] * 180 / numpy.pi
CV190: angle between atoms ['109', '107', '113']; mdtraj.compute_angles(mtraj, numpy.array([[108, 106, 112]]))[0][0] * 180 / numpy.pi
CV191: angle between atoms ['110', '109', '111']; mdtraj.compute_angles(mtraj, numpy.array([[109, 108, 110]]))[0][0] * 180 / numpy.pi
CV192: angle between atoms ['110', '109', '112']; mdtraj.compute_angles(mtraj, numpy.array([[109, 108, 111]]))[0][0] * 180 / numpy.pi
CV193: angle between atoms ['111', '109', '112']; mdtraj.compute_angles(mtraj, numpy.array([[110, 108, 111]]))[0][0] * 180 / numpy.pi
CV194: angle between atoms ['113', '116', '117']; mdtraj.compute_angles(mtraj, numpy.array([[112, 115, 116]]))[0][0] * 180 / numpy.pi
CV195: angle between atoms ['113', '116', '118']; mdtraj.compute_angles(mtraj, numpy.array([[112, 115, 117]]))[0][0] * 180 / numpy.pi
CV196: angle between atoms ['113', '116', '119']; mdtraj.compute_angles(mtraj, numpy.array([[112, 115, 118]]))[0][0] * 180 / numpy.pi
CV197: angle between atoms ['114', '113', '115']; mdtraj.compute_angles(mtraj, numpy.array([[113, 112, 114]]))[0][0] * 180 / numpy.pi
CV198: angle between atoms ['114', '113', '116']; mdtraj.compute_angles(mtraj, numpy.array([[113, 112, 115]]))[0][0] * 180 / numpy.pi
CV199: angle between atoms ['115', '113', '116']; mdtraj.compute_angles(mtraj, numpy.array([[114, 112, 115]]))[0][0] * 180 / numpy.pi
CV200: angle between atoms ['117', '116', '118']; mdtraj.compute_angles(mtraj, numpy.array([[116, 115, 117]]))[0][0] * 180 / numpy.pi
CV201: angle between atoms ['117', '116', '119']; mdtraj.compute_angles(mtraj, numpy.array([[116, 115, 118]]))[0][0] * 180 / numpy.pi
CV202: angle between atoms ['118', '116', '119']; mdtraj.compute_angles(mtraj, numpy.array([[117, 115, 118]]))[0][0] * 180 / numpy.pi
CV203: angle between atoms ['120', '122', '123']; mdtraj.compute_angles(mtraj, numpy.array([[119, 121, 122]]))[0][0] * 180 / numpy.pi
CV204: angle between atoms ['120', '122', '124']; mdtraj.compute_angles(mtraj, numpy.array([[119, 121, 123]]))[0][0] * 180 / numpy.pi
CV205: angle between atoms ['121', '120', '122']; mdtraj.compute_angles(mtraj, numpy.array([[120, 119, 121]]))[0][0] * 180 / numpy.pi
CV206: angle between atoms ['122', '124', '125']; mdtraj.compute_angles(mtraj, numpy.array([[121, 123, 124]]))[0][0] * 180 / numpy.pi
CV207: angle between atoms ['122', '124', '126']; mdtraj.compute_angles(mtraj, numpy.array([[121, 123, 125]]))[0][0] * 180 / numpy.pi
CV208: angle between atoms ['122', '124', '132']; mdtraj.compute_angles(mtraj, numpy.array([[121, 123, 131]]))[0][0] * 180 / numpy.pi
CV209: angle between atoms ['123', '122', '124']; mdtraj.compute_angles(mtraj, numpy.array([[122, 121, 123]]))[0][0] * 180 / numpy.pi
CV210: angle between atoms ['124', '126', '127']; mdtraj.compute_angles(mtraj, numpy.array([[123, 125, 126]]))[0][0] * 180 / numpy.pi
CV211: angle between atoms ['124', '132', '133']; mdtraj.compute_angles(mtraj, numpy.array([[123, 131, 132]]))[0][0] * 180 / numpy.pi
CV212: angle between atoms ['124', '132', '134']; mdtraj.compute_angles(mtraj, numpy.array([[123, 131, 133]]))[0][0] * 180 / numpy.pi
CV213: angle between atoms ['125', '124', '126']; mdtraj.compute_angles(mtraj, numpy.array([[124, 123, 125]]))[0][0] * 180 / numpy.pi
CV214: angle between atoms ['125', '124', '132']; mdtraj.compute_angles(mtraj, numpy.array([[124, 123, 131]]))[0][0] * 180 / numpy.pi
CV215: angle between atoms ['126', '124', '132']; mdtraj.compute_angles(mtraj, numpy.array([[125, 123, 131]]))[0][0] * 180 / numpy.pi
CV216: angle between atoms ['132', '134', '135']; mdtraj.compute_angles(mtraj, numpy.array([[131, 133, 134]]))[0][0] * 180 / numpy.pi
CV217: angle between atoms ['132', '134', '136']; mdtraj.compute_angles(mtraj, numpy.array([[131, 133, 135]]))[0][0] * 180 / numpy.pi
CV218: angle between atoms ['133', '132', '134']; mdtraj.compute_angles(mtraj, numpy.array([[132, 131, 133]]))[0][0] * 180 / numpy.pi
CV219: angle between atoms ['134', '136', '137']; mdtraj.compute_angles(mtraj, numpy.array([[133, 135, 136]]))[0][0] * 180 / numpy.pi
CV220: angle between atoms ['134', '136', '138']; mdtraj.compute_angles(mtraj, numpy.array([[133, 135, 137]]))[0][0] * 180 / numpy.pi
CV221: angle between atoms ['134', '136', '151']; mdtraj.compute_angles(mtraj, numpy.array([[133, 135, 150]]))[0][0] * 180 / numpy.pi
CV222: angle between atoms ['135', '134', '136']; mdtraj.compute_angles(mtraj, numpy.array([[134, 133, 135]]))[0][0] * 180 / numpy.pi
CV223: angle between atoms ['136', '138', '139']; mdtraj.compute_angles(mtraj, numpy.array([[135, 137, 138]]))[0][0] * 180 / numpy.pi
CV224: angle between atoms ['136', '138', '140']; mdtraj.compute_angles(mtraj, numpy.array([[135, 137, 139]]))[0][0] * 180 / numpy.pi
CV225: angle between atoms ['136', '138', '141']; mdtraj.compute_angles(mtraj, numpy.array([[135, 137, 140]]))[0][0] * 180 / numpy.pi
CV226: angle between atoms ['136', '151', '152']; mdtraj.compute_angles(mtraj, numpy.array([[135, 150, 151]]))[0][0] * 180 / numpy.pi
CV227: angle between atoms ['136', '151', '153']; mdtraj.compute_angles(mtraj, numpy.array([[135, 150, 152]]))[0][0] * 180 / numpy.pi
CV228: angle between atoms ['137', '136', '138']; mdtraj.compute_angles(mtraj, numpy.array([[136, 135, 137]]))[0][0] * 180 / numpy.pi
CV229: angle between atoms ['137', '136', '151']; mdtraj.compute_angles(mtraj, numpy.array([[136, 135, 150]]))[0][0] * 180 / numpy.pi
CV230: angle between atoms ['138', '141', '142']; mdtraj.compute_angles(mtraj, numpy.array([[137, 140, 141]]))[0][0] * 180 / numpy.pi
CV231: angle between atoms ['138', '141', '147']; mdtraj.compute_angles(mtraj, numpy.array([[137, 140, 146]]))[0][0] * 180 / numpy.pi
CV232: angle between atoms ['138', '136', '151']; mdtraj.compute_angles(mtraj, numpy.array([[137, 135, 150]]))[0][0] * 180 / numpy.pi
CV233: angle between atoms ['139', '138', '140']; mdtraj.compute_angles(mtraj, numpy.array([[138, 137, 139]]))[0][0] * 180 / numpy.pi
CV234: angle between atoms ['139', '138', '141']; mdtraj.compute_angles(mtraj, numpy.array([[138, 137, 140]]))[0][0] * 180 / numpy.pi
CV235: angle between atoms ['140', '138', '141']; mdtraj.compute_angles(mtraj, numpy.array([[139, 137, 140]]))[0][0] * 180 / numpy.pi
CV236: angle between atoms ['141', '147', '148']; mdtraj.compute_angles(mtraj, numpy.array([[140, 146, 147]]))[0][0] * 180 / numpy.pi
CV237: angle between atoms ['141', '147', '150']; mdtraj.compute_angles(mtraj, numpy.array([[140, 146, 149]]))[0][0] * 180 / numpy.pi
CV238: angle between atoms ['142', '141', '147']; mdtraj.compute_angles(mtraj, numpy.array([[141, 140, 146]]))[0][0] * 180 / numpy.pi
CV239: angle between atoms ['148', '147', '150']; mdtraj.compute_angles(mtraj, numpy.array([[147, 146, 149]]))[0][0] * 180 / numpy.pi
CV240: angle between atoms ['151', '153', '154']; mdtraj.compute_angles(mtraj, numpy.array([[150, 152, 153]]))[0][0] * 180 / numpy.pi
CV241: angle between atoms ['151', '153', '155']; mdtraj.compute_angles(mtraj, numpy.array([[150, 152, 154]]))[0][0] * 180 / numpy.pi
CV242: angle between atoms ['152', '151', '153']; mdtraj.compute_angles(mtraj, numpy.array([[151, 150, 152]]))[0][0] * 180 / numpy.pi
CV243: angle between atoms ['153', '155', '156']; mdtraj.compute_angles(mtraj, numpy.array([[152, 154, 155]]))[0][0] * 180 / numpy.pi
CV244: angle between atoms ['153', '155', '157']; mdtraj.compute_angles(mtraj, numpy.array([[152, 154, 156]]))[0][0] * 180 / numpy.pi
CV245: angle between atoms ['153', '155', '167']; mdtraj.compute_angles(mtraj, numpy.array([[152, 154, 166]]))[0][0] * 180 / numpy.pi
CV246: angle between atoms ['154', '153', '155']; mdtraj.compute_angles(mtraj, numpy.array([[153, 152, 154]]))[0][0] * 180 / numpy.pi
CV247: angle between atoms ['155', '157', '158']; mdtraj.compute_angles(mtraj, numpy.array([[154, 156, 157]]))[0][0] * 180 / numpy.pi
CV248: angle between atoms ['155', '157', '159']; mdtraj.compute_angles(mtraj, numpy.array([[154, 156, 158]]))[0][0] * 180 / numpy.pi
CV249: angle between atoms ['155', '157', '163']; mdtraj.compute_angles(mtraj, numpy.array([[154, 156, 162]]))[0][0] * 180 / numpy.pi
CV250: angle between atoms ['155', '167', '169']; mdtraj.compute_angles(mtraj, numpy.array([[154, 166, 168]]))[0][0] * 180 / numpy.pi
CV251: angle between atoms ['156', '155', '157']; mdtraj.compute_angles(mtraj, numpy.array([[155, 154, 156]]))[0][0] * 180 / numpy.pi
CV252: angle between atoms ['156', '155', '167']; mdtraj.compute_angles(mtraj, numpy.array([[155, 154, 166]]))[0][0] * 180 / numpy.pi
CV253: angle between atoms ['157', '159', '160']; mdtraj.compute_angles(mtraj, numpy.array([[156, 158, 159]]))[0][0] * 180 / numpy.pi
CV254: angle between atoms ['157', '159', '161']; mdtraj.compute_angles(mtraj, numpy.array([[156, 158, 160]]))[0][0] * 180 / numpy.pi
CV255: angle between atoms ['157', '163', '164']; mdtraj.compute_angles(mtraj, numpy.array([[156, 162, 163]]))[0][0] * 180 / numpy.pi
CV256: angle between atoms ['157', '163', '165']; mdtraj.compute_angles(mtraj, numpy.array([[156, 162, 164]]))[0][0] * 180 / numpy.pi
CV257: angle between atoms ['157', '163', '166']; mdtraj.compute_angles(mtraj, numpy.array([[156, 162, 165]]))[0][0] * 180 / numpy.pi
CV258: angle between atoms ['157', '155', '167']; mdtraj.compute_angles(mtraj, numpy.array([[156, 154, 166]]))[0][0] * 180 / numpy.pi
CV259: angle between atoms ['158', '157', '159']; mdtraj.compute_angles(mtraj, numpy.array([[157, 156, 158]]))[0][0] * 180 / numpy.pi
CV260: angle between atoms ['158', '157', '163']; mdtraj.compute_angles(mtraj, numpy.array([[157, 156, 162]]))[0][0] * 180 / numpy.pi
CV261: angle between atoms ['159', '157', '163']; mdtraj.compute_angles(mtraj, numpy.array([[158, 156, 162]]))[0][0] * 180 / numpy.pi
CV262: angle between atoms ['160', '159', '161']; mdtraj.compute_angles(mtraj, numpy.array([[159, 158, 160]]))[0][0] * 180 / numpy.pi
CV263: angle between atoms ['164', '163', '165']; mdtraj.compute_angles(mtraj, numpy.array([[163, 162, 164]]))[0][0] * 180 / numpy.pi
CV264: angle between atoms ['164', '163', '166']; mdtraj.compute_angles(mtraj, numpy.array([[163, 162, 165]]))[0][0] * 180 / numpy.pi
CV265: angle between atoms ['165', '163', '166']; mdtraj.compute_angles(mtraj, numpy.array([[164, 162, 165]]))[0][0] * 180 / numpy.pi
CV266: angle between atoms ['167', '169', '170']; mdtraj.compute_angles(mtraj, numpy.array([[166, 168, 169]]))[0][0] * 180 / numpy.pi
CV267: angle between atoms ['4120', '4119', '4121']; mdtraj.compute_angles(mtraj, numpy.array([[4119, 4118, 4120]]))[0][0] * 180 / numpy.pi
CV268: angle between atoms ['4120', '4119', '4122']; mdtraj.compute_angles(mtraj, numpy.array([[4119, 4118, 4121]]))[0][0] * 180 / numpy.pi
CV269: angle between atoms ['4121', '4119', '4122']; mdtraj.compute_angles(mtraj, numpy.array([[4120, 4118, 4121]]))[0][0] * 180 / numpy.pi
CV270: dihedral between atoms ['85', '84', '86', '87']; mdtraj.compute_dihedrals(mtraj, numpy.array([[84, 83, 85, 86]]))[0][0] * 180 / numpy.pi
CV271: dihedral between atoms ['82', '84', '86', '87']; mdtraj.compute_dihedrals(mtraj, numpy.array([[81, 83, 85, 86]]))[0][0] * 180 / numpy.pi
CV272: dihedral between atoms ['91', '84', '86', '87']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 83, 85, 86]]))[0][0] * 180 / numpy.pi
CV273: dihedral between atoms ['85', '84', '86', '88']; mdtraj.compute_dihedrals(mtraj, numpy.array([[84, 83, 85, 87]]))[0][0] * 180 / numpy.pi
CV274: dihedral between atoms ['82', '84', '86', '88']; mdtraj.compute_dihedrals(mtraj, numpy.array([[81, 83, 85, 87]]))[0][0] * 180 / numpy.pi
CV275: dihedral between atoms ['91', '84', '86', '88']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 83, 85, 87]]))[0][0] * 180 / numpy.pi
CV276: dihedral between atoms ['85', '84', '86', '89']; mdtraj.compute_dihedrals(mtraj, numpy.array([[84, 83, 85, 88]]))[0][0] * 180 / numpy.pi
CV277: dihedral between atoms ['82', '84', '86', '89']; mdtraj.compute_dihedrals(mtraj, numpy.array([[81, 83, 85, 88]]))[0][0] * 180 / numpy.pi
CV278: dihedral between atoms ['91', '84', '86', '89']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 83, 85, 88]]))[0][0] * 180 / numpy.pi
CV279: dihedral between atoms ['84', '86', '89', '90']; mdtraj.compute_dihedrals(mtraj, numpy.array([[83, 85, 88, 89]]))[0][0] * 180 / numpy.pi
CV280: dihedral between atoms ['85', '84', '91', '92']; mdtraj.compute_dihedrals(mtraj, numpy.array([[84, 83, 90, 91]]))[0][0] * 180 / numpy.pi
CV281: dihedral between atoms ['82', '84', '91', '92']; mdtraj.compute_dihedrals(mtraj, numpy.array([[81, 83, 90, 91]]))[0][0] * 180 / numpy.pi
CV282: dihedral between atoms ['86', '84', '91', '92']; mdtraj.compute_dihedrals(mtraj, numpy.array([[85, 83, 90, 91]]))[0][0] * 180 / numpy.pi
CV283: dihedral between atoms ['85', '84', '91', '93']; mdtraj.compute_dihedrals(mtraj, numpy.array([[84, 83, 90, 92]]))[0][0] * 180 / numpy.pi
CV284: dihedral between atoms ['82', '84', '91', '93']; mdtraj.compute_dihedrals(mtraj, numpy.array([[81, 83, 90, 92]]))[0][0] * 180 / numpy.pi
CV285: dihedral between atoms ['86', '84', '91', '93']; mdtraj.compute_dihedrals(mtraj, numpy.array([[85, 83, 90, 92]]))[0][0] * 180 / numpy.pi
CV286: dihedral between atoms ['84', '91', '93', '94']; mdtraj.compute_dihedrals(mtraj, numpy.array([[83, 90, 92, 93]]))[0][0] * 180 / numpy.pi
CV287: dihedral between atoms ['84', '91', '93', '95']; mdtraj.compute_dihedrals(mtraj, numpy.array([[83, 90, 92, 94]]))[0][0] * 180 / numpy.pi
CV288: dihedral between atoms ['85', '84', '86', '87']; mdtraj.compute_dihedrals(mtraj, numpy.array([[84, 83, 85, 86]]))[0][0] * 180 / numpy.pi
CV289: dihedral between atoms ['85', '84', '86', '88']; mdtraj.compute_dihedrals(mtraj, numpy.array([[84, 83, 85, 87]]))[0][0] * 180 / numpy.pi
CV290: dihedral between atoms ['85', '84', '86', '89']; mdtraj.compute_dihedrals(mtraj, numpy.array([[84, 83, 85, 88]]))[0][0] * 180 / numpy.pi
CV291: dihedral between atoms ['85', '84', '91', '93']; mdtraj.compute_dihedrals(mtraj, numpy.array([[84, 83, 90, 92]]))[0][0] * 180 / numpy.pi
CV292: dihedral between atoms ['85', '84', '91', '92']; mdtraj.compute_dihedrals(mtraj, numpy.array([[84, 83, 90, 91]]))[0][0] * 180 / numpy.pi
CV293: dihedral between atoms ['84', '86', '89', '90']; mdtraj.compute_dihedrals(mtraj, numpy.array([[83, 85, 88, 89]]))[0][0] * 180 / numpy.pi
CV294: dihedral between atoms ['87', '86', '89', '90']; mdtraj.compute_dihedrals(mtraj, numpy.array([[86, 85, 88, 89]]))[0][0] * 180 / numpy.pi
CV295: dihedral between atoms ['88', '86', '89', '90']; mdtraj.compute_dihedrals(mtraj, numpy.array([[87, 85, 88, 89]]))[0][0] * 180 / numpy.pi
CV296: dihedral between atoms ['87', '86', '84', '91']; mdtraj.compute_dihedrals(mtraj, numpy.array([[86, 85, 83, 90]]))[0][0] * 180 / numpy.pi
CV297: dihedral between atoms ['88', '86', '84', '91']; mdtraj.compute_dihedrals(mtraj, numpy.array([[87, 85, 83, 90]]))[0][0] * 180 / numpy.pi
CV298: dihedral between atoms ['89', '86', '84', '91']; mdtraj.compute_dihedrals(mtraj, numpy.array([[88, 85, 83, 90]]))[0][0] * 180 / numpy.pi
CV299: dihedral between atoms ['86', '84', '91', '93']; mdtraj.compute_dihedrals(mtraj, numpy.array([[85, 83, 90, 92]]))[0][0] * 180 / numpy.pi
CV300: dihedral between atoms ['86', '84', '91', '92']; mdtraj.compute_dihedrals(mtraj, numpy.array([[85, 83, 90, 91]]))[0][0] * 180 / numpy.pi
CV301: dihedral between atoms ['87', '86', '89', '90']; mdtraj.compute_dihedrals(mtraj, numpy.array([[86, 85, 88, 89]]))[0][0] * 180 / numpy.pi
CV302: dihedral between atoms ['88', '86', '89', '90']; mdtraj.compute_dihedrals(mtraj, numpy.array([[87, 85, 88, 89]]))[0][0] * 180 / numpy.pi
CV303: dihedral between atoms ['84', '91', '93', '94']; mdtraj.compute_dihedrals(mtraj, numpy.array([[83, 90, 92, 93]]))[0][0] * 180 / numpy.pi
CV304: dihedral between atoms ['92', '91', '93', '94']; mdtraj.compute_dihedrals(mtraj, numpy.array([[91, 90, 92, 93]]))[0][0] * 180 / numpy.pi
CV305: dihedral between atoms ['84', '91', '93', '95']; mdtraj.compute_dihedrals(mtraj, numpy.array([[83, 90, 92, 94]]))[0][0] * 180 / numpy.pi
CV306: dihedral between atoms ['92', '91', '93', '95']; mdtraj.compute_dihedrals(mtraj, numpy.array([[91, 90, 92, 94]]))[0][0] * 180 / numpy.pi
CV307: dihedral between atoms ['91', '93', '95', '96']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 92, 94, 95]]))[0][0] * 180 / numpy.pi
CV308: dihedral between atoms ['91', '93', '95', '97']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 92, 94, 96]]))[0][0] * 180 / numpy.pi
CV309: dihedral between atoms ['91', '93', '95', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 92, 94, 100]]))[0][0] * 180 / numpy.pi
CV310: dihedral between atoms ['92', '91', '93', '94']; mdtraj.compute_dihedrals(mtraj, numpy.array([[91, 90, 92, 93]]))[0][0] * 180 / numpy.pi
CV311: dihedral between atoms ['92', '91', '93', '95']; mdtraj.compute_dihedrals(mtraj, numpy.array([[91, 90, 92, 94]]))[0][0] * 180 / numpy.pi
CV312: dihedral between atoms ['91', '93', '95', '96']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 92, 94, 95]]))[0][0] * 180 / numpy.pi
CV313: dihedral between atoms ['94', '93', '95', '96']; mdtraj.compute_dihedrals(mtraj, numpy.array([[93, 92, 94, 95]]))[0][0] * 180 / numpy.pi
CV314: dihedral between atoms ['91', '93', '95', '97']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 92, 94, 96]]))[0][0] * 180 / numpy.pi
CV315: dihedral between atoms ['94', '93', '95', '97']; mdtraj.compute_dihedrals(mtraj, numpy.array([[93, 92, 94, 96]]))[0][0] * 180 / numpy.pi
CV316: dihedral between atoms ['93', '95', '97', '98']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 96, 97]]))[0][0] * 180 / numpy.pi
CV317: dihedral between atoms ['93', '95', '97', '99']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 96, 98]]))[0][0] * 180 / numpy.pi
CV318: dihedral between atoms ['93', '95', '97', '100']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 96, 99]]))[0][0] * 180 / numpy.pi
CV319: dihedral between atoms ['91', '93', '95', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[90, 92, 94, 100]]))[0][0] * 180 / numpy.pi
CV320: dihedral between atoms ['94', '93', '95', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[93, 92, 94, 100]]))[0][0] * 180 / numpy.pi
CV321: dihedral between atoms ['93', '95', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 102]]))[0][0] * 180 / numpy.pi
CV322: dihedral between atoms ['93', '95', '101', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 101]]))[0][0] * 180 / numpy.pi
CV323: dihedral between atoms ['93', '95', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 103]]))[0][0] * 180 / numpy.pi
CV324: dihedral between atoms ['93', '95', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 104]]))[0][0] * 180 / numpy.pi
CV325: dihedral between atoms ['94', '93', '95', '96']; mdtraj.compute_dihedrals(mtraj, numpy.array([[93, 92, 94, 95]]))[0][0] * 180 / numpy.pi
CV326: dihedral between atoms ['94', '93', '95', '97']; mdtraj.compute_dihedrals(mtraj, numpy.array([[93, 92, 94, 96]]))[0][0] * 180 / numpy.pi
CV327: dihedral between atoms ['94', '93', '95', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[93, 92, 94, 100]]))[0][0] * 180 / numpy.pi
CV328: dihedral between atoms ['93', '95', '97', '98']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 96, 97]]))[0][0] * 180 / numpy.pi
CV329: dihedral between atoms ['96', '95', '97', '98']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 96, 97]]))[0][0] * 180 / numpy.pi
CV330: dihedral between atoms ['101', '95', '97', '98']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 94, 96, 97]]))[0][0] * 180 / numpy.pi
CV331: dihedral between atoms ['93', '95', '97', '99']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 96, 98]]))[0][0] * 180 / numpy.pi
CV332: dihedral between atoms ['96', '95', '97', '99']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 96, 98]]))[0][0] * 180 / numpy.pi
CV333: dihedral between atoms ['101', '95', '97', '99']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 94, 96, 98]]))[0][0] * 180 / numpy.pi
CV334: dihedral between atoms ['93', '95', '97', '100']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 96, 99]]))[0][0] * 180 / numpy.pi
CV335: dihedral between atoms ['96', '95', '97', '100']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 96, 99]]))[0][0] * 180 / numpy.pi
CV336: dihedral between atoms ['101', '95', '97', '100']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 94, 96, 99]]))[0][0] * 180 / numpy.pi
CV337: dihedral between atoms ['93', '95', '101', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 101]]))[0][0] * 180 / numpy.pi
CV338: dihedral between atoms ['96', '95', '101', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 100, 101]]))[0][0] * 180 / numpy.pi
CV339: dihedral between atoms ['97', '95', '101', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 101]]))[0][0] * 180 / numpy.pi
CV340: dihedral between atoms ['95', '101', '102', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 101, 102]]))[0][0] * 180 / numpy.pi
CV341: dihedral between atoms ['95', '101', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 101, 103]]))[0][0] * 180 / numpy.pi
CV342: dihedral between atoms ['95', '101', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 101, 104]]))[0][0] * 180 / numpy.pi
CV343: dihedral between atoms ['93', '95', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 102]]))[0][0] * 180 / numpy.pi
CV344: dihedral between atoms ['96', '95', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 100, 102]]))[0][0] * 180 / numpy.pi
CV345: dihedral between atoms ['97', '95', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 102]]))[0][0] * 180 / numpy.pi
CV346: dihedral between atoms ['95', '101', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 102, 103]]))[0][0] * 180 / numpy.pi
CV347: dihedral between atoms ['95', '101', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 102, 104]]))[0][0] * 180 / numpy.pi
CV348: dihedral between atoms ['95', '101', '103', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 102, 101]]))[0][0] * 180 / numpy.pi
CV349: dihedral between atoms ['93', '95', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 103]]))[0][0] * 180 / numpy.pi
CV350: dihedral between atoms ['96', '95', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 100, 103]]))[0][0] * 180 / numpy.pi
CV351: dihedral between atoms ['97', '95', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 103]]))[0][0] * 180 / numpy.pi
CV352: dihedral between atoms ['95', '101', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 103, 102]]))[0][0] * 180 / numpy.pi
CV353: dihedral between atoms ['95', '101', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 103, 101]]))[0][0] * 180 / numpy.pi
CV354: dihedral between atoms ['95', '101', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 103, 104]]))[0][0] * 180 / numpy.pi
CV355: dihedral between atoms ['93', '95', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[92, 94, 100, 104]]))[0][0] * 180 / numpy.pi
CV356: dihedral between atoms ['96', '95', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 100, 104]]))[0][0] * 180 / numpy.pi
CV357: dihedral between atoms ['97', '95', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 104]]))[0][0] * 180 / numpy.pi
CV358: dihedral between atoms ['95', '101', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 102]]))[0][0] * 180 / numpy.pi
CV359: dihedral between atoms ['95', '101', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 105]]))[0][0] * 180 / numpy.pi
CV360: dihedral between atoms ['95', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV361: dihedral between atoms ['95', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV362: dihedral between atoms ['95', '101', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 101]]))[0][0] * 180 / numpy.pi
CV363: dihedral between atoms ['95', '101', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 103]]))[0][0] * 180 / numpy.pi
CV364: dihedral between atoms ['96', '95', '97', '98']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 96, 97]]))[0][0] * 180 / numpy.pi
CV365: dihedral between atoms ['96', '95', '97', '99']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 96, 98]]))[0][0] * 180 / numpy.pi
CV366: dihedral between atoms ['96', '95', '97', '100']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 96, 99]]))[0][0] * 180 / numpy.pi
CV367: dihedral between atoms ['96', '95', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 100, 102]]))[0][0] * 180 / numpy.pi
CV368: dihedral between atoms ['96', '95', '101', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 100, 101]]))[0][0] * 180 / numpy.pi
CV369: dihedral between atoms ['96', '95', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 100, 103]]))[0][0] * 180 / numpy.pi
CV370: dihedral between atoms ['96', '95', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[95, 94, 100, 104]]))[0][0] * 180 / numpy.pi
CV371: dihedral between atoms ['98', '97', '95', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[97, 96, 94, 100]]))[0][0] * 180 / numpy.pi
CV372: dihedral between atoms ['99', '97', '95', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[98, 96, 94, 100]]))[0][0] * 180 / numpy.pi
CV373: dihedral between atoms ['100', '97', '95', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[99, 96, 94, 100]]))[0][0] * 180 / numpy.pi
CV374: dihedral between atoms ['97', '95', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 102]]))[0][0] * 180 / numpy.pi
CV375: dihedral between atoms ['97', '95', '101', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 101]]))[0][0] * 180 / numpy.pi
CV376: dihedral between atoms ['97', '95', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 103]]))[0][0] * 180 / numpy.pi
CV377: dihedral between atoms ['97', '95', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[96, 94, 100, 104]]))[0][0] * 180 / numpy.pi
CV378: dihedral between atoms ['95', '101', '103', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 102, 101]]))[0][0] * 180 / numpy.pi
CV379: dihedral between atoms ['104', '101', '103', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 102, 101]]))[0][0] * 180 / numpy.pi
CV380: dihedral between atoms ['105', '101', '103', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 102, 101]]))[0][0] * 180 / numpy.pi
CV381: dihedral between atoms ['101', '103', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 101, 103]]))[0][0] * 180 / numpy.pi
CV382: dihedral between atoms ['101', '103', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 101, 104]]))[0][0] * 180 / numpy.pi
CV383: dihedral between atoms ['95', '101', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 103, 101]]))[0][0] * 180 / numpy.pi
CV384: dihedral between atoms ['103', '101', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 103, 101]]))[0][0] * 180 / numpy.pi
CV385: dihedral between atoms ['105', '101', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 103, 101]]))[0][0] * 180 / numpy.pi
CV386: dihedral between atoms ['101', '104', '102', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 101, 102]]))[0][0] * 180 / numpy.pi
CV387: dihedral between atoms ['101', '104', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 101, 104]]))[0][0] * 180 / numpy.pi
CV388: dihedral between atoms ['95', '101', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 101]]))[0][0] * 180 / numpy.pi
CV389: dihedral between atoms ['103', '101', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 101]]))[0][0] * 180 / numpy.pi
CV390: dihedral between atoms ['104', '101', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 101]]))[0][0] * 180 / numpy.pi
CV391: dihedral between atoms ['101', '105', '102', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 101, 102]]))[0][0] * 180 / numpy.pi
CV392: dihedral between atoms ['101', '105', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 101, 103]]))[0][0] * 180 / numpy.pi
CV393: dihedral between atoms ['95', '101', '102', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 101, 102]]))[0][0] * 180 / numpy.pi
CV394: dihedral between atoms ['101', '102', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 102, 103]]))[0][0] * 180 / numpy.pi
CV395: dihedral between atoms ['101', '102', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 102, 104]]))[0][0] * 180 / numpy.pi
CV396: dihedral between atoms ['104', '101', '102', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 101, 102]]))[0][0] * 180 / numpy.pi
CV397: dihedral between atoms ['105', '101', '102', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 101, 102]]))[0][0] * 180 / numpy.pi
CV398: dihedral between atoms ['95', '101', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 103, 102]]))[0][0] * 180 / numpy.pi
CV399: dihedral between atoms ['102', '101', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 103, 102]]))[0][0] * 180 / numpy.pi
CV400: dihedral between atoms ['101', '104', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 102, 104]]))[0][0] * 180 / numpy.pi
CV401: dihedral between atoms ['105', '101', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 103, 102]]))[0][0] * 180 / numpy.pi
CV402: dihedral between atoms ['101', '104', '103', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 102, 101]]))[0][0] * 180 / numpy.pi
CV403: dihedral between atoms ['95', '101', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 102]]))[0][0] * 180 / numpy.pi
CV404: dihedral between atoms ['102', '101', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 102]]))[0][0] * 180 / numpy.pi
CV405: dihedral between atoms ['101', '105', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 102, 103]]))[0][0] * 180 / numpy.pi
CV406: dihedral between atoms ['104', '101', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 102]]))[0][0] * 180 / numpy.pi
CV407: dihedral between atoms ['101', '105', '103', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 102, 101]]))[0][0] * 180 / numpy.pi
CV408: dihedral between atoms ['95', '101', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 101, 103]]))[0][0] * 180 / numpy.pi
CV409: dihedral between atoms ['103', '101', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 101, 103]]))[0][0] * 180 / numpy.pi
CV410: dihedral between atoms ['101', '102', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 103, 102]]))[0][0] * 180 / numpy.pi
CV411: dihedral between atoms ['105', '101', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 101, 103]]))[0][0] * 180 / numpy.pi
CV412: dihedral between atoms ['101', '102', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 103, 104]]))[0][0] * 180 / numpy.pi
CV413: dihedral between atoms ['95', '101', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 102, 103]]))[0][0] * 180 / numpy.pi
CV414: dihedral between atoms ['102', '101', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 102, 103]]))[0][0] * 180 / numpy.pi
CV415: dihedral between atoms ['105', '101', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 100, 102, 103]]))[0][0] * 180 / numpy.pi
CV416: dihedral between atoms ['101', '103', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 103, 101]]))[0][0] * 180 / numpy.pi
CV417: dihedral between atoms ['101', '103', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 103, 104]]))[0][0] * 180 / numpy.pi
CV418: dihedral between atoms ['95', '101', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 103]]))[0][0] * 180 / numpy.pi
CV419: dihedral between atoms ['103', '101', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 103]]))[0][0] * 180 / numpy.pi
CV420: dihedral between atoms ['102', '101', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 103]]))[0][0] * 180 / numpy.pi
CV421: dihedral between atoms ['101', '105', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 103, 102]]))[0][0] * 180 / numpy.pi
CV422: dihedral between atoms ['101', '105', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 103, 101]]))[0][0] * 180 / numpy.pi
CV423: dihedral between atoms ['95', '101', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 101, 104]]))[0][0] * 180 / numpy.pi
CV424: dihedral between atoms ['103', '101', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 101, 104]]))[0][0] * 180 / numpy.pi
CV425: dihedral between atoms ['101', '102', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 102]]))[0][0] * 180 / numpy.pi
CV426: dihedral between atoms ['101', '102', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 105]]))[0][0] * 180 / numpy.pi
CV427: dihedral between atoms ['101', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV428: dihedral between atoms ['101', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV429: dihedral between atoms ['104', '101', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 101, 104]]))[0][0] * 180 / numpy.pi
CV430: dihedral between atoms ['101', '102', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 103]]))[0][0] * 180 / numpy.pi
CV431: dihedral between atoms ['95', '101', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 102, 104]]))[0][0] * 180 / numpy.pi
CV432: dihedral between atoms ['102', '101', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 102, 104]]))[0][0] * 180 / numpy.pi
CV433: dihedral between atoms ['101', '103', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 105]]))[0][0] * 180 / numpy.pi
CV434: dihedral between atoms ['101', '103', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 106]]))[0][0] * 180 / numpy.pi
CV435: dihedral between atoms ['101', '103', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 119]]))[0][0] * 180 / numpy.pi
CV436: dihedral between atoms ['104', '101', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 102, 104]]))[0][0] * 180 / numpy.pi
CV437: dihedral between atoms ['101', '103', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 101]]))[0][0] * 180 / numpy.pi
CV438: dihedral between atoms ['101', '103', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 103]]))[0][0] * 180 / numpy.pi
CV439: dihedral between atoms ['95', '101', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 103, 104]]))[0][0] * 180 / numpy.pi
CV440: dihedral between atoms ['103', '101', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 103, 104]]))[0][0] * 180 / numpy.pi
CV441: dihedral between atoms ['102', '101', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 103, 104]]))[0][0] * 180 / numpy.pi
CV442: dihedral between atoms ['101', '104', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 104, 102]]))[0][0] * 180 / numpy.pi
CV443: dihedral between atoms ['101', '104', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 104, 105]]))[0][0] * 180 / numpy.pi
CV444: dihedral between atoms ['101', '104', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 104, 106]]))[0][0] * 180 / numpy.pi
CV445: dihedral between atoms ['101', '104', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 104, 119]]))[0][0] * 180 / numpy.pi
CV446: dihedral between atoms ['101', '104', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 104, 101]]))[0][0] * 180 / numpy.pi
CV447: dihedral between atoms ['95', '101', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 105]]))[0][0] * 180 / numpy.pi
CV448: dihedral between atoms ['103', '101', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 105]]))[0][0] * 180 / numpy.pi
CV449: dihedral between atoms ['102', '101', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 105]]))[0][0] * 180 / numpy.pi
CV450: dihedral between atoms ['104', '101', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 105]]))[0][0] * 180 / numpy.pi
CV451: dihedral between atoms ['95', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV452: dihedral between atoms ['103', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV453: dihedral between atoms ['102', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV454: dihedral between atoms ['101', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV455: dihedral between atoms ['101', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV456: dihedral between atoms ['101', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV457: dihedral between atoms ['104', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV458: dihedral between atoms ['95', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[94, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV459: dihedral between atoms ['103', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV460: dihedral between atoms ['102', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV461: dihedral between atoms ['101', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV462: dihedral between atoms ['101', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV463: dihedral between atoms ['104', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV464: dihedral between atoms ['102', '101', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 102, 103]]))[0][0] * 180 / numpy.pi
CV465: dihedral between atoms ['102', '101', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 102, 104]]))[0][0] * 180 / numpy.pi
CV466: dihedral between atoms ['104', '102', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 100, 102]]))[0][0] * 180 / numpy.pi
CV467: dihedral between atoms ['105', '102', '101', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 101, 100, 102]]))[0][0] * 180 / numpy.pi
CV468: dihedral between atoms ['102', '104', '103', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 102, 100]]))[0][0] * 180 / numpy.pi
CV469: dihedral between atoms ['101', '102', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 103, 102]]))[0][0] * 180 / numpy.pi
CV470: dihedral between atoms ['102', '104', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 102, 104]]))[0][0] * 180 / numpy.pi
CV471: dihedral between atoms ['105', '102', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 101, 103, 102]]))[0][0] * 180 / numpy.pi
CV472: dihedral between atoms ['102', '105', '103', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 102, 100]]))[0][0] * 180 / numpy.pi
CV473: dihedral between atoms ['101', '102', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 102]]))[0][0] * 180 / numpy.pi
CV474: dihedral between atoms ['102', '105', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 102, 103]]))[0][0] * 180 / numpy.pi
CV475: dihedral between atoms ['104', '102', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 102]]))[0][0] * 180 / numpy.pi
CV476: dihedral between atoms ['102', '101', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 103, 102]]))[0][0] * 180 / numpy.pi
CV477: dihedral between atoms ['103', '102', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 100, 103]]))[0][0] * 180 / numpy.pi
CV478: dihedral between atoms ['105', '102', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 101, 100, 103]]))[0][0] * 180 / numpy.pi
CV479: dihedral between atoms ['102', '101', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 103, 104]]))[0][0] * 180 / numpy.pi
CV480: dihedral between atoms ['101', '102', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 102, 103]]))[0][0] * 180 / numpy.pi
CV481: dihedral between atoms ['102', '103', '104', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 103, 100]]))[0][0] * 180 / numpy.pi
CV482: dihedral between atoms ['105', '102', '103', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 101, 102, 103]]))[0][0] * 180 / numpy.pi
CV483: dihedral between atoms ['102', '103', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 103, 104]]))[0][0] * 180 / numpy.pi
CV484: dihedral between atoms ['101', '102', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 103]]))[0][0] * 180 / numpy.pi
CV485: dihedral between atoms ['102', '105', '104', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 103, 102]]))[0][0] * 180 / numpy.pi
CV486: dihedral between atoms ['102', '105', '104', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 103, 100]]))[0][0] * 180 / numpy.pi
CV487: dihedral between atoms ['103', '102', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 103]]))[0][0] * 180 / numpy.pi
CV488: dihedral between atoms ['102', '101', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 102]]))[0][0] * 180 / numpy.pi
CV489: dihedral between atoms ['102', '101', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 105]]))[0][0] * 180 / numpy.pi
CV490: dihedral between atoms ['102', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV491: dihedral between atoms ['102', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV492: dihedral between atoms ['103', '102', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 100, 104]]))[0][0] * 180 / numpy.pi
CV493: dihedral between atoms ['104', '102', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 100, 104]]))[0][0] * 180 / numpy.pi
CV494: dihedral between atoms ['102', '101', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 100, 104, 103]]))[0][0] * 180 / numpy.pi
CV495: dihedral between atoms ['101', '102', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 102, 104]]))[0][0] * 180 / numpy.pi
CV496: dihedral between atoms ['102', '103', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 105]]))[0][0] * 180 / numpy.pi
CV497: dihedral between atoms ['102', '103', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 106]]))[0][0] * 180 / numpy.pi
CV498: dihedral between atoms ['102', '103', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 119]]))[0][0] * 180 / numpy.pi
CV499: dihedral between atoms ['102', '103', '105', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 100]]))[0][0] * 180 / numpy.pi
CV500: dihedral between atoms ['104', '102', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 102, 104]]))[0][0] * 180 / numpy.pi
CV501: dihedral between atoms ['102', '103', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 103]]))[0][0] * 180 / numpy.pi
CV502: dihedral between atoms ['101', '102', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 103, 104]]))[0][0] * 180 / numpy.pi
CV503: dihedral between atoms ['102', '104', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 102]]))[0][0] * 180 / numpy.pi
CV504: dihedral between atoms ['102', '104', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 105]]))[0][0] * 180 / numpy.pi
CV505: dihedral between atoms ['102', '104', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 106]]))[0][0] * 180 / numpy.pi
CV506: dihedral between atoms ['102', '104', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 119]]))[0][0] * 180 / numpy.pi
CV507: dihedral between atoms ['102', '104', '105', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 100]]))[0][0] * 180 / numpy.pi
CV508: dihedral between atoms ['103', '102', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 103, 104]]))[0][0] * 180 / numpy.pi
CV509: dihedral between atoms ['101', '102', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 105]]))[0][0] * 180 / numpy.pi
CV510: dihedral between atoms ['103', '102', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 105]]))[0][0] * 180 / numpy.pi
CV511: dihedral between atoms ['104', '102', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 105]]))[0][0] * 180 / numpy.pi
CV512: dihedral between atoms ['101', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV513: dihedral between atoms ['102', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV514: dihedral between atoms ['102', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV515: dihedral between atoms ['102', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV516: dihedral between atoms ['103', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV517: dihedral between atoms ['104', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV518: dihedral between atoms ['101', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV519: dihedral between atoms ['102', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV520: dihedral between atoms ['102', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV521: dihedral between atoms ['103', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV522: dihedral between atoms ['104', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV523: dihedral between atoms ['105', '103', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 102, 100, 103]]))[0][0] * 180 / numpy.pi
CV524: dihedral between atoms ['102', '103', '101', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 100, 103]]))[0][0] * 180 / numpy.pi
CV525: dihedral between atoms ['103', '101', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 103, 101]]))[0][0] * 180 / numpy.pi
CV526: dihedral between atoms ['103', '101', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 103, 104]]))[0][0] * 180 / numpy.pi
CV527: dihedral between atoms ['101', '103', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 101, 103]]))[0][0] * 180 / numpy.pi
CV528: dihedral between atoms ['105', '103', '102', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 102, 101, 103]]))[0][0] * 180 / numpy.pi
CV529: dihedral between atoms ['103', '102', '104', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 103, 100]]))[0][0] * 180 / numpy.pi
CV530: dihedral between atoms ['103', '102', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 103, 104]]))[0][0] * 180 / numpy.pi
CV531: dihedral between atoms ['101', '103', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 103]]))[0][0] * 180 / numpy.pi
CV532: dihedral between atoms ['103', '105', '104', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 103, 100]]))[0][0] * 180 / numpy.pi
CV533: dihedral between atoms ['102', '103', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 103]]))[0][0] * 180 / numpy.pi
CV534: dihedral between atoms ['103', '105', '104', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 103, 101]]))[0][0] * 180 / numpy.pi
CV535: dihedral between atoms ['104', '103', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 100, 104]]))[0][0] * 180 / numpy.pi
CV536: dihedral between atoms ['103', '101', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 105]]))[0][0] * 180 / numpy.pi
CV537: dihedral between atoms ['103', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV538: dihedral between atoms ['103', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV539: dihedral between atoms ['102', '103', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 100, 104]]))[0][0] * 180 / numpy.pi
CV540: dihedral between atoms ['103', '101', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 101]]))[0][0] * 180 / numpy.pi
CV541: dihedral between atoms ['103', '101', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 100, 104, 103]]))[0][0] * 180 / numpy.pi
CV542: dihedral between atoms ['101', '103', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 101, 104]]))[0][0] * 180 / numpy.pi
CV543: dihedral between atoms ['104', '103', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 101, 104]]))[0][0] * 180 / numpy.pi
CV544: dihedral between atoms ['103', '102', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 105]]))[0][0] * 180 / numpy.pi
CV545: dihedral between atoms ['103', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV546: dihedral between atoms ['103', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV547: dihedral between atoms ['103', '102', '105', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 100]]))[0][0] * 180 / numpy.pi
CV548: dihedral between atoms ['103', '102', '105', '104']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 101, 104, 103]]))[0][0] * 180 / numpy.pi
CV549: dihedral between atoms ['101', '103', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 103, 104]]))[0][0] * 180 / numpy.pi
CV550: dihedral between atoms ['103', '104', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 104, 105]]))[0][0] * 180 / numpy.pi
CV551: dihedral between atoms ['103', '104', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 104, 106]]))[0][0] * 180 / numpy.pi
CV552: dihedral between atoms ['103', '104', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 104, 119]]))[0][0] * 180 / numpy.pi
CV553: dihedral between atoms ['103', '104', '105', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 104, 100]]))[0][0] * 180 / numpy.pi
CV554: dihedral between atoms ['102', '103', '104', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 103, 104]]))[0][0] * 180 / numpy.pi
CV555: dihedral between atoms ['103', '104', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 104, 101]]))[0][0] * 180 / numpy.pi
CV556: dihedral between atoms ['101', '103', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 105]]))[0][0] * 180 / numpy.pi
CV557: dihedral between atoms ['104', '103', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 105]]))[0][0] * 180 / numpy.pi
CV558: dihedral between atoms ['102', '103', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 105]]))[0][0] * 180 / numpy.pi
CV559: dihedral between atoms ['101', '103', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 106]]))[0][0] * 180 / numpy.pi
CV560: dihedral between atoms ['104', '103', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 106]]))[0][0] * 180 / numpy.pi
CV561: dihedral between atoms ['103', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV562: dihedral between atoms ['103', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV563: dihedral between atoms ['103', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV564: dihedral between atoms ['102', '103', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 106]]))[0][0] * 180 / numpy.pi
CV565: dihedral between atoms ['101', '103', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 102, 104, 119]]))[0][0] * 180 / numpy.pi
CV566: dihedral between atoms ['104', '103', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 119]]))[0][0] * 180 / numpy.pi
CV567: dihedral between atoms ['103', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV568: dihedral between atoms ['103', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV569: dihedral between atoms ['102', '103', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 102, 104, 119]]))[0][0] * 180 / numpy.pi
CV570: dihedral between atoms ['103', '104', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 100, 104]]))[0][0] * 180 / numpy.pi
CV571: dihedral between atoms ['104', '101', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 102]]))[0][0] * 180 / numpy.pi
CV572: dihedral between atoms ['104', '101', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 105]]))[0][0] * 180 / numpy.pi
CV573: dihedral between atoms ['104', '101', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 106]]))[0][0] * 180 / numpy.pi
CV574: dihedral between atoms ['104', '101', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 119]]))[0][0] * 180 / numpy.pi
CV575: dihedral between atoms ['102', '104', '101', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 100, 104]]))[0][0] * 180 / numpy.pi
CV576: dihedral between atoms ['104', '101', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 100, 104, 101]]))[0][0] * 180 / numpy.pi
CV577: dihedral between atoms ['103', '104', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 101, 104]]))[0][0] * 180 / numpy.pi
CV578: dihedral between atoms ['104', '102', '105', '103']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 102]]))[0][0] * 180 / numpy.pi
CV579: dihedral between atoms ['104', '102', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 105]]))[0][0] * 180 / numpy.pi
CV580: dihedral between atoms ['104', '102', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 106]]))[0][0] * 180 / numpy.pi
CV581: dihedral between atoms ['104', '102', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 119]]))[0][0] * 180 / numpy.pi
CV582: dihedral between atoms ['101', '104', '102', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 101, 104]]))[0][0] * 180 / numpy.pi
CV583: dihedral between atoms ['104', '102', '105', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 101, 104, 100]]))[0][0] * 180 / numpy.pi
CV584: dihedral between atoms ['104', '103', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 105]]))[0][0] * 180 / numpy.pi
CV585: dihedral between atoms ['104', '103', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 106]]))[0][0] * 180 / numpy.pi
CV586: dihedral between atoms ['104', '103', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 119]]))[0][0] * 180 / numpy.pi
CV587: dihedral between atoms ['101', '104', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 102, 104]]))[0][0] * 180 / numpy.pi
CV588: dihedral between atoms ['104', '103', '105', '101']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 100]]))[0][0] * 180 / numpy.pi
CV589: dihedral between atoms ['102', '104', '103', '105']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 102, 104]]))[0][0] * 180 / numpy.pi
CV590: dihedral between atoms ['104', '103', '105', '102']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 102, 104, 101]]))[0][0] * 180 / numpy.pi
CV591: dihedral between atoms ['103', '104', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 104, 105]]))[0][0] * 180 / numpy.pi
CV592: dihedral between atoms ['101', '104', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 104, 105]]))[0][0] * 180 / numpy.pi
CV593: dihedral between atoms ['102', '104', '105', '106']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 105]]))[0][0] * 180 / numpy.pi
CV594: dihedral between atoms ['103', '104', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 104, 106]]))[0][0] * 180 / numpy.pi
CV595: dihedral between atoms ['104', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV596: dihedral between atoms ['104', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV597: dihedral between atoms ['104', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV598: dihedral between atoms ['101', '104', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 104, 106]]))[0][0] * 180 / numpy.pi
CV599: dihedral between atoms ['102', '104', '105', '107']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 106]]))[0][0] * 180 / numpy.pi
CV600: dihedral between atoms ['103', '104', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 103, 104, 119]]))[0][0] * 180 / numpy.pi
CV601: dihedral between atoms ['104', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV602: dihedral between atoms ['104', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV603: dihedral between atoms ['101', '104', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 103, 104, 119]]))[0][0] * 180 / numpy.pi
CV604: dihedral between atoms ['102', '104', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 103, 104, 119]]))[0][0] * 180 / numpy.pi
CV605: dihedral between atoms ['103', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV606: dihedral between atoms ['106', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[105, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV607: dihedral between atoms ['120', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV608: dihedral between atoms ['101', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV609: dihedral between atoms ['102', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV610: dihedral between atoms ['104', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV611: dihedral between atoms ['103', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV612: dihedral between atoms ['106', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[105, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV613: dihedral between atoms ['120', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV614: dihedral between atoms ['105', '107', '109', '110']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 108, 109]]))[0][0] * 180 / numpy.pi
CV615: dihedral between atoms ['105', '107', '109', '111']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 108, 110]]))[0][0] * 180 / numpy.pi
CV616: dihedral between atoms ['105', '107', '109', '112']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 108, 111]]))[0][0] * 180 / numpy.pi
CV617: dihedral between atoms ['101', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV618: dihedral between atoms ['102', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV619: dihedral between atoms ['104', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV620: dihedral between atoms ['103', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV621: dihedral between atoms ['106', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[105, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV622: dihedral between atoms ['120', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV623: dihedral between atoms ['105', '107', '113', '114']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 112, 113]]))[0][0] * 180 / numpy.pi
CV624: dihedral between atoms ['105', '107', '113', '115']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 112, 114]]))[0][0] * 180 / numpy.pi
CV625: dihedral between atoms ['105', '107', '113', '116']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 112, 115]]))[0][0] * 180 / numpy.pi
CV626: dihedral between atoms ['101', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV627: dihedral between atoms ['102', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV628: dihedral between atoms ['104', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV629: dihedral between atoms ['103', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV630: dihedral between atoms ['106', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[105, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV631: dihedral between atoms ['107', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV632: dihedral between atoms ['101', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV633: dihedral between atoms ['102', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV634: dihedral between atoms ['104', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV635: dihedral between atoms ['103', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[102, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV636: dihedral between atoms ['106', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[105, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV637: dihedral between atoms ['107', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV638: dihedral between atoms ['105', '120', '122', '123']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 119, 121, 122]]))[0][0] * 180 / numpy.pi
CV639: dihedral between atoms ['105', '120', '122', '124']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 119, 121, 123]]))[0][0] * 180 / numpy.pi
CV640: dihedral between atoms ['101', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[100, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV641: dihedral between atoms ['102', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[101, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV642: dihedral between atoms ['104', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[103, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV643: dihedral between atoms ['106', '105', '107', '108']; mdtraj.compute_dihedrals(mtraj, numpy.array([[105, 104, 106, 107]]))[0][0] * 180 / numpy.pi
CV644: dihedral between atoms ['106', '105', '107', '109']; mdtraj.compute_dihedrals(mtraj, numpy.array([[105, 104, 106, 108]]))[0][0] * 180 / numpy.pi
CV645: dihedral between atoms ['106', '105', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[105, 104, 106, 112]]))[0][0] * 180 / numpy.pi
CV646: dihedral between atoms ['106', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[105, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV647: dihedral between atoms ['106', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[105, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV648: dihedral between atoms ['105', '107', '109', '110']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 108, 109]]))[0][0] * 180 / numpy.pi
CV649: dihedral between atoms ['108', '107', '109', '110']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 108, 109]]))[0][0] * 180 / numpy.pi
CV650: dihedral between atoms ['113', '107', '109', '110']; mdtraj.compute_dihedrals(mtraj, numpy.array([[112, 106, 108, 109]]))[0][0] * 180 / numpy.pi
CV651: dihedral between atoms ['105', '107', '109', '111']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 108, 110]]))[0][0] * 180 / numpy.pi
CV652: dihedral between atoms ['108', '107', '109', '111']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 108, 110]]))[0][0] * 180 / numpy.pi
CV653: dihedral between atoms ['113', '107', '109', '111']; mdtraj.compute_dihedrals(mtraj, numpy.array([[112, 106, 108, 110]]))[0][0] * 180 / numpy.pi
CV654: dihedral between atoms ['105', '107', '109', '112']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 108, 111]]))[0][0] * 180 / numpy.pi
CV655: dihedral between atoms ['108', '107', '109', '112']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 108, 111]]))[0][0] * 180 / numpy.pi
CV656: dihedral between atoms ['113', '107', '109', '112']; mdtraj.compute_dihedrals(mtraj, numpy.array([[112, 106, 108, 111]]))[0][0] * 180 / numpy.pi
CV657: dihedral between atoms ['105', '107', '113', '114']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 112, 113]]))[0][0] * 180 / numpy.pi
CV658: dihedral between atoms ['108', '107', '113', '114']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 112, 113]]))[0][0] * 180 / numpy.pi
CV659: dihedral between atoms ['109', '107', '113', '114']; mdtraj.compute_dihedrals(mtraj, numpy.array([[108, 106, 112, 113]]))[0][0] * 180 / numpy.pi
CV660: dihedral between atoms ['105', '107', '113', '115']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 112, 114]]))[0][0] * 180 / numpy.pi
CV661: dihedral between atoms ['108', '107', '113', '115']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 112, 114]]))[0][0] * 180 / numpy.pi
CV662: dihedral between atoms ['109', '107', '113', '115']; mdtraj.compute_dihedrals(mtraj, numpy.array([[108, 106, 112, 114]]))[0][0] * 180 / numpy.pi
CV663: dihedral between atoms ['105', '107', '113', '116']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 106, 112, 115]]))[0][0] * 180 / numpy.pi
CV664: dihedral between atoms ['108', '107', '113', '116']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 112, 115]]))[0][0] * 180 / numpy.pi
CV665: dihedral between atoms ['109', '107', '113', '116']; mdtraj.compute_dihedrals(mtraj, numpy.array([[108, 106, 112, 115]]))[0][0] * 180 / numpy.pi
CV666: dihedral between atoms ['107', '113', '116', '117']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 112, 115, 116]]))[0][0] * 180 / numpy.pi
CV667: dihedral between atoms ['107', '113', '116', '118']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 112, 115, 117]]))[0][0] * 180 / numpy.pi
CV668: dihedral between atoms ['107', '113', '116', '119']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 112, 115, 118]]))[0][0] * 180 / numpy.pi
CV669: dihedral between atoms ['108', '107', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 104, 119]]))[0][0] * 180 / numpy.pi
CV670: dihedral between atoms ['109', '107', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[108, 106, 104, 119]]))[0][0] * 180 / numpy.pi
CV671: dihedral between atoms ['113', '107', '105', '120']; mdtraj.compute_dihedrals(mtraj, numpy.array([[112, 106, 104, 119]]))[0][0] * 180 / numpy.pi
CV672: dihedral between atoms ['107', '105', '120', '122']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 104, 119, 121]]))[0][0] * 180 / numpy.pi
CV673: dihedral between atoms ['107', '105', '120', '121']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 104, 119, 120]]))[0][0] * 180 / numpy.pi
CV674: dihedral between atoms ['108', '107', '109', '110']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 108, 109]]))[0][0] * 180 / numpy.pi
CV675: dihedral between atoms ['108', '107', '109', '111']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 108, 110]]))[0][0] * 180 / numpy.pi
CV676: dihedral between atoms ['108', '107', '109', '112']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 108, 111]]))[0][0] * 180 / numpy.pi
CV677: dihedral between atoms ['108', '107', '113', '114']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 112, 113]]))[0][0] * 180 / numpy.pi
CV678: dihedral between atoms ['108', '107', '113', '115']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 112, 114]]))[0][0] * 180 / numpy.pi
CV679: dihedral between atoms ['108', '107', '113', '116']; mdtraj.compute_dihedrals(mtraj, numpy.array([[107, 106, 112, 115]]))[0][0] * 180 / numpy.pi
CV680: dihedral between atoms ['110', '109', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[109, 108, 106, 112]]))[0][0] * 180 / numpy.pi
CV681: dihedral between atoms ['111', '109', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[110, 108, 106, 112]]))[0][0] * 180 / numpy.pi
CV682: dihedral between atoms ['112', '109', '107', '113']; mdtraj.compute_dihedrals(mtraj, numpy.array([[111, 108, 106, 112]]))[0][0] * 180 / numpy.pi
CV683: dihedral between atoms ['109', '107', '113', '114']; mdtraj.compute_dihedrals(mtraj, numpy.array([[108, 106, 112, 113]]))[0][0] * 180 / numpy.pi
CV684: dihedral between atoms ['109', '107', '113', '115']; mdtraj.compute_dihedrals(mtraj, numpy.array([[108, 106, 112, 114]]))[0][0] * 180 / numpy.pi
CV685: dihedral between atoms ['109', '107', '113', '116']; mdtraj.compute_dihedrals(mtraj, numpy.array([[108, 106, 112, 115]]))[0][0] * 180 / numpy.pi
CV686: dihedral between atoms ['107', '113', '116', '117']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 112, 115, 116]]))[0][0] * 180 / numpy.pi
CV687: dihedral between atoms ['114', '113', '116', '117']; mdtraj.compute_dihedrals(mtraj, numpy.array([[113, 112, 115, 116]]))[0][0] * 180 / numpy.pi
CV688: dihedral between atoms ['115', '113', '116', '117']; mdtraj.compute_dihedrals(mtraj, numpy.array([[114, 112, 115, 116]]))[0][0] * 180 / numpy.pi
CV689: dihedral between atoms ['107', '113', '116', '118']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 112, 115, 117]]))[0][0] * 180 / numpy.pi
CV690: dihedral between atoms ['114', '113', '116', '118']; mdtraj.compute_dihedrals(mtraj, numpy.array([[113, 112, 115, 117]]))[0][0] * 180 / numpy.pi
CV691: dihedral between atoms ['115', '113', '116', '118']; mdtraj.compute_dihedrals(mtraj, numpy.array([[114, 112, 115, 117]]))[0][0] * 180 / numpy.pi
CV692: dihedral between atoms ['107', '113', '116', '119']; mdtraj.compute_dihedrals(mtraj, numpy.array([[106, 112, 115, 118]]))[0][0] * 180 / numpy.pi
CV693: dihedral between atoms ['114', '113', '116', '119']; mdtraj.compute_dihedrals(mtraj, numpy.array([[113, 112, 115, 118]]))[0][0] * 180 / numpy.pi
CV694: dihedral between atoms ['115', '113', '116', '119']; mdtraj.compute_dihedrals(mtraj, numpy.array([[114, 112, 115, 118]]))[0][0] * 180 / numpy.pi
CV695: dihedral between atoms ['114', '113', '116', '117']; mdtraj.compute_dihedrals(mtraj, numpy.array([[113, 112, 115, 116]]))[0][0] * 180 / numpy.pi
CV696: dihedral between atoms ['114', '113', '116', '118']; mdtraj.compute_dihedrals(mtraj, numpy.array([[113, 112, 115, 117]]))[0][0] * 180 / numpy.pi
CV697: dihedral between atoms ['114', '113', '116', '119']; mdtraj.compute_dihedrals(mtraj, numpy.array([[113, 112, 115, 118]]))[0][0] * 180 / numpy.pi
CV698: dihedral between atoms ['115', '113', '116', '117']; mdtraj.compute_dihedrals(mtraj, numpy.array([[114, 112, 115, 116]]))[0][0] * 180 / numpy.pi
CV699: dihedral between atoms ['115', '113', '116', '118']; mdtraj.compute_dihedrals(mtraj, numpy.array([[114, 112, 115, 117]]))[0][0] * 180 / numpy.pi
CV700: dihedral between atoms ['115', '113', '116', '119']; mdtraj.compute_dihedrals(mtraj, numpy.array([[114, 112, 115, 118]]))[0][0] * 180 / numpy.pi
CV701: dihedral between atoms ['105', '120', '122', '123']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 119, 121, 122]]))[0][0] * 180 / numpy.pi
CV702: dihedral between atoms ['121', '120', '122', '123']; mdtraj.compute_dihedrals(mtraj, numpy.array([[120, 119, 121, 122]]))[0][0] * 180 / numpy.pi
CV703: dihedral between atoms ['105', '120', '122', '124']; mdtraj.compute_dihedrals(mtraj, numpy.array([[104, 119, 121, 123]]))[0][0] * 180 / numpy.pi
CV704: dihedral between atoms ['121', '120', '122', '124']; mdtraj.compute_dihedrals(mtraj, numpy.array([[120, 119, 121, 123]]))[0][0] * 180 / numpy.pi
CV705: dihedral between atoms ['120', '122', '124', '125']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 121, 123, 124]]))[0][0] * 180 / numpy.pi
CV706: dihedral between atoms ['120', '122', '124', '126']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 121, 123, 125]]))[0][0] * 180 / numpy.pi
CV707: dihedral between atoms ['120', '122', '124', '132']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 121, 123, 131]]))[0][0] * 180 / numpy.pi
CV708: dihedral between atoms ['121', '120', '122', '123']; mdtraj.compute_dihedrals(mtraj, numpy.array([[120, 119, 121, 122]]))[0][0] * 180 / numpy.pi
CV709: dihedral between atoms ['121', '120', '122', '124']; mdtraj.compute_dihedrals(mtraj, numpy.array([[120, 119, 121, 123]]))[0][0] * 180 / numpy.pi
CV710: dihedral between atoms ['120', '122', '124', '125']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 121, 123, 124]]))[0][0] * 180 / numpy.pi
CV711: dihedral between atoms ['123', '122', '124', '125']; mdtraj.compute_dihedrals(mtraj, numpy.array([[122, 121, 123, 124]]))[0][0] * 180 / numpy.pi
CV712: dihedral between atoms ['120', '122', '124', '126']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 121, 123, 125]]))[0][0] * 180 / numpy.pi
CV713: dihedral between atoms ['123', '122', '124', '126']; mdtraj.compute_dihedrals(mtraj, numpy.array([[122, 121, 123, 125]]))[0][0] * 180 / numpy.pi
CV714: dihedral between atoms ['122', '124', '126', '127']; mdtraj.compute_dihedrals(mtraj, numpy.array([[121, 123, 125, 126]]))[0][0] * 180 / numpy.pi
CV715: dihedral between atoms ['122', '124', '126', '128']; mdtraj.compute_dihedrals(mtraj, numpy.array([[121, 123, 125, 127]]))[0][0] * 180 / numpy.pi
CV716: dihedral between atoms ['122', '124', '126', '129']; mdtraj.compute_dihedrals(mtraj, numpy.array([[121, 123, 125, 128]]))[0][0] * 180 / numpy.pi
CV717: dihedral between atoms ['120', '122', '124', '132']; mdtraj.compute_dihedrals(mtraj, numpy.array([[119, 121, 123, 131]]))[0][0] * 180 / numpy.pi
CV718: dihedral between atoms ['123', '122', '124', '132']; mdtraj.compute_dihedrals(mtraj, numpy.array([[122, 121, 123, 131]]))[0][0] * 180 / numpy.pi
CV719: dihedral between atoms ['122', '124', '132', '134']; mdtraj.compute_dihedrals(mtraj, numpy.array([[121, 123, 131, 133]]))[0][0] * 180 / numpy.pi
CV720: dihedral between atoms ['122', '124', '132', '133']; mdtraj.compute_dihedrals(mtraj, numpy.array([[121, 123, 131, 132]]))[0][0] * 180 / numpy.pi
CV721: dihedral between atoms ['123', '122', '124', '125']; mdtraj.compute_dihedrals(mtraj, numpy.array([[122, 121, 123, 124]]))[0][0] * 180 / numpy.pi
CV722: dihedral between atoms ['123', '122', '124', '126']; mdtraj.compute_dihedrals(mtraj, numpy.array([[122, 121, 123, 125]]))[0][0] * 180 / numpy.pi
CV723: dihedral between atoms ['123', '122', '124', '132']; mdtraj.compute_dihedrals(mtraj, numpy.array([[122, 121, 123, 131]]))[0][0] * 180 / numpy.pi
CV724: dihedral between atoms ['122', '124', '126', '127']; mdtraj.compute_dihedrals(mtraj, numpy.array([[121, 123, 125, 126]]))[0][0] * 180 / numpy.pi
CV725: dihedral between atoms ['125', '124', '126', '127']; mdtraj.compute_dihedrals(mtraj, numpy.array([[124, 123, 125, 126]]))[0][0] * 180 / numpy.pi
CV726: dihedral between atoms ['132', '124', '126', '127']; mdtraj.compute_dihedrals(mtraj, numpy.array([[131, 123, 125, 126]]))[0][0] * 180 / numpy.pi
CV727: dihedral between atoms ['122', '124', '132', '133']; mdtraj.compute_dihedrals(mtraj, numpy.array([[121, 123, 131, 132]]))[0][0] * 180 / numpy.pi
CV728: dihedral between atoms ['125', '124', '132', '133']; mdtraj.compute_dihedrals(mtraj, numpy.array([[124, 123, 131, 132]]))[0][0] * 180 / numpy.pi
CV729: dihedral between atoms ['126', '124', '132', '133']; mdtraj.compute_dihedrals(mtraj, numpy.array([[125, 123, 131, 132]]))[0][0] * 180 / numpy.pi
CV730: dihedral between atoms ['122', '124', '132', '134']; mdtraj.compute_dihedrals(mtraj, numpy.array([[121, 123, 131, 133]]))[0][0] * 180 / numpy.pi
CV731: dihedral between atoms ['125', '124', '132', '134']; mdtraj.compute_dihedrals(mtraj, numpy.array([[124, 123, 131, 133]]))[0][0] * 180 / numpy.pi
CV732: dihedral between atoms ['126', '124', '132', '134']; mdtraj.compute_dihedrals(mtraj, numpy.array([[125, 123, 131, 133]]))[0][0] * 180 / numpy.pi
CV733: dihedral between atoms ['124', '132', '134', '135']; mdtraj.compute_dihedrals(mtraj, numpy.array([[123, 131, 133, 134]]))[0][0] * 180 / numpy.pi
CV734: dihedral between atoms ['124', '132', '134', '136']; mdtraj.compute_dihedrals(mtraj, numpy.array([[123, 131, 133, 135]]))[0][0] * 180 / numpy.pi
CV735: dihedral between atoms ['125', '124', '126', '127']; mdtraj.compute_dihedrals(mtraj, numpy.array([[124, 123, 125, 126]]))[0][0] * 180 / numpy.pi
CV736: dihedral between atoms ['125', '124', '126', '128']; mdtraj.compute_dihedrals(mtraj, numpy.array([[124, 123, 125, 127]]))[0][0] * 180 / numpy.pi
CV737: dihedral between atoms ['125', '124', '126', '129']; mdtraj.compute_dihedrals(mtraj, numpy.array([[124, 123, 125, 128]]))[0][0] * 180 / numpy.pi
CV738: dihedral between atoms ['125', '124', '132', '134']; mdtraj.compute_dihedrals(mtraj, numpy.array([[124, 123, 131, 133]]))[0][0] * 180 / numpy.pi
CV739: dihedral between atoms ['125', '124', '132', '133']; mdtraj.compute_dihedrals(mtraj, numpy.array([[124, 123, 131, 132]]))[0][0] * 180 / numpy.pi
CV740: dihedral between atoms ['127', '126', '124', '132']; mdtraj.compute_dihedrals(mtraj, numpy.array([[126, 125, 123, 131]]))[0][0] * 180 / numpy.pi
CV741: dihedral between atoms ['128', '126', '124', '132']; mdtraj.compute_dihedrals(mtraj, numpy.array([[127, 125, 123, 131]]))[0][0] * 180 / numpy.pi
CV742: dihedral between atoms ['129', '126', '124', '132']; mdtraj.compute_dihedrals(mtraj, numpy.array([[128, 125, 123, 131]]))[0][0] * 180 / numpy.pi
CV743: dihedral between atoms ['126', '124', '132', '134']; mdtraj.compute_dihedrals(mtraj, numpy.array([[125, 123, 131, 133]]))[0][0] * 180 / numpy.pi
CV744: dihedral between atoms ['126', '124', '132', '133']; mdtraj.compute_dihedrals(mtraj, numpy.array([[125, 123, 131, 132]]))[0][0] * 180 / numpy.pi
CV745: dihedral between atoms ['124', '132', '134', '135']; mdtraj.compute_dihedrals(mtraj, numpy.array([[123, 131, 133, 134]]))[0][0] * 180 / numpy.pi
CV746: dihedral between atoms ['133', '132', '134', '135']; mdtraj.compute_dihedrals(mtraj, numpy.array([[132, 131, 133, 134]]))[0][0] * 180 / numpy.pi
CV747: dihedral between atoms ['124', '132', '134', '136']; mdtraj.compute_dihedrals(mtraj, numpy.array([[123, 131, 133, 135]]))[0][0] * 180 / numpy.pi
CV748: dihedral between atoms ['133', '132', '134', '136']; mdtraj.compute_dihedrals(mtraj, numpy.array([[132, 131, 133, 135]]))[0][0] * 180 / numpy.pi
CV749: dihedral between atoms ['132', '134', '136', '137']; mdtraj.compute_dihedrals(mtraj, numpy.array([[131, 133, 135, 136]]))[0][0] * 180 / numpy.pi
CV750: dihedral between atoms ['132', '134', '136', '138']; mdtraj.compute_dihedrals(mtraj, numpy.array([[131, 133, 135, 137]]))[0][0] * 180 / numpy.pi
CV751: dihedral between atoms ['132', '134', '136', '151']; mdtraj.compute_dihedrals(mtraj, numpy.array([[131, 133, 135, 150]]))[0][0] * 180 / numpy.pi
CV752: dihedral between atoms ['133', '132', '134', '135']; mdtraj.compute_dihedrals(mtraj, numpy.array([[132, 131, 133, 134]]))[0][0] * 180 / numpy.pi
CV753: dihedral between atoms ['133', '132', '134', '136']; mdtraj.compute_dihedrals(mtraj, numpy.array([[132, 131, 133, 135]]))[0][0] * 180 / numpy.pi
CV754: dihedral between atoms ['132', '134', '136', '137']; mdtraj.compute_dihedrals(mtraj, numpy.array([[131, 133, 135, 136]]))[0][0] * 180 / numpy.pi
CV755: dihedral between atoms ['135', '134', '136', '137']; mdtraj.compute_dihedrals(mtraj, numpy.array([[134, 133, 135, 136]]))[0][0] * 180 / numpy.pi
CV756: dihedral between atoms ['132', '134', '136', '138']; mdtraj.compute_dihedrals(mtraj, numpy.array([[131, 133, 135, 137]]))[0][0] * 180 / numpy.pi
CV757: dihedral between atoms ['135', '134', '136', '138']; mdtraj.compute_dihedrals(mtraj, numpy.array([[134, 133, 135, 137]]))[0][0] * 180 / numpy.pi
CV758: dihedral between atoms ['134', '136', '138', '139']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 137, 138]]))[0][0] * 180 / numpy.pi
CV759: dihedral between atoms ['134', '136', '138', '140']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 137, 139]]))[0][0] * 180 / numpy.pi
CV760: dihedral between atoms ['134', '136', '138', '141']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 137, 140]]))[0][0] * 180 / numpy.pi
CV761: dihedral between atoms ['132', '134', '136', '151']; mdtraj.compute_dihedrals(mtraj, numpy.array([[131, 133, 135, 150]]))[0][0] * 180 / numpy.pi
CV762: dihedral between atoms ['135', '134', '136', '151']; mdtraj.compute_dihedrals(mtraj, numpy.array([[134, 133, 135, 150]]))[0][0] * 180 / numpy.pi
CV763: dihedral between atoms ['134', '136', '151', '153']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 150, 152]]))[0][0] * 180 / numpy.pi
CV764: dihedral between atoms ['134', '136', '151', '152']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 150, 151]]))[0][0] * 180 / numpy.pi
CV765: dihedral between atoms ['135', '134', '136', '137']; mdtraj.compute_dihedrals(mtraj, numpy.array([[134, 133, 135, 136]]))[0][0] * 180 / numpy.pi
CV766: dihedral between atoms ['135', '134', '136', '138']; mdtraj.compute_dihedrals(mtraj, numpy.array([[134, 133, 135, 137]]))[0][0] * 180 / numpy.pi
CV767: dihedral between atoms ['135', '134', '136', '151']; mdtraj.compute_dihedrals(mtraj, numpy.array([[134, 133, 135, 150]]))[0][0] * 180 / numpy.pi
CV768: dihedral between atoms ['134', '136', '138', '139']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 137, 138]]))[0][0] * 180 / numpy.pi
CV769: dihedral between atoms ['137', '136', '138', '139']; mdtraj.compute_dihedrals(mtraj, numpy.array([[136, 135, 137, 138]]))[0][0] * 180 / numpy.pi
CV770: dihedral between atoms ['151', '136', '138', '139']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 135, 137, 138]]))[0][0] * 180 / numpy.pi
CV771: dihedral between atoms ['134', '136', '138', '140']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 137, 139]]))[0][0] * 180 / numpy.pi
CV772: dihedral between atoms ['137', '136', '138', '140']; mdtraj.compute_dihedrals(mtraj, numpy.array([[136, 135, 137, 139]]))[0][0] * 180 / numpy.pi
CV773: dihedral between atoms ['151', '136', '138', '140']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 135, 137, 139]]))[0][0] * 180 / numpy.pi
CV774: dihedral between atoms ['134', '136', '138', '141']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 137, 140]]))[0][0] * 180 / numpy.pi
CV775: dihedral between atoms ['137', '136', '138', '141']; mdtraj.compute_dihedrals(mtraj, numpy.array([[136, 135, 137, 140]]))[0][0] * 180 / numpy.pi
CV776: dihedral between atoms ['151', '136', '138', '141']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 135, 137, 140]]))[0][0] * 180 / numpy.pi
CV777: dihedral between atoms ['136', '138', '141', '142']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 137, 140, 141]]))[0][0] * 180 / numpy.pi
CV778: dihedral between atoms ['136', '138', '141', '143']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 137, 140, 142]]))[0][0] * 180 / numpy.pi
CV779: dihedral between atoms ['136', '138', '141', '147']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 137, 140, 146]]))[0][0] * 180 / numpy.pi
CV780: dihedral between atoms ['134', '136', '151', '152']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 150, 151]]))[0][0] * 180 / numpy.pi
CV781: dihedral between atoms ['137', '136', '151', '152']; mdtraj.compute_dihedrals(mtraj, numpy.array([[136, 135, 150, 151]]))[0][0] * 180 / numpy.pi
CV782: dihedral between atoms ['138', '136', '151', '152']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 135, 150, 151]]))[0][0] * 180 / numpy.pi
CV783: dihedral between atoms ['134', '136', '151', '153']; mdtraj.compute_dihedrals(mtraj, numpy.array([[133, 135, 150, 152]]))[0][0] * 180 / numpy.pi
CV784: dihedral between atoms ['137', '136', '151', '153']; mdtraj.compute_dihedrals(mtraj, numpy.array([[136, 135, 150, 152]]))[0][0] * 180 / numpy.pi
CV785: dihedral between atoms ['138', '136', '151', '153']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 135, 150, 152]]))[0][0] * 180 / numpy.pi
CV786: dihedral between atoms ['136', '151', '153', '154']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 150, 152, 153]]))[0][0] * 180 / numpy.pi
CV787: dihedral between atoms ['136', '151', '153', '155']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 150, 152, 154]]))[0][0] * 180 / numpy.pi
CV788: dihedral between atoms ['137', '136', '138', '139']; mdtraj.compute_dihedrals(mtraj, numpy.array([[136, 135, 137, 138]]))[0][0] * 180 / numpy.pi
CV789: dihedral between atoms ['137', '136', '138', '140']; mdtraj.compute_dihedrals(mtraj, numpy.array([[136, 135, 137, 139]]))[0][0] * 180 / numpy.pi
CV790: dihedral between atoms ['137', '136', '138', '141']; mdtraj.compute_dihedrals(mtraj, numpy.array([[136, 135, 137, 140]]))[0][0] * 180 / numpy.pi
CV791: dihedral between atoms ['137', '136', '151', '153']; mdtraj.compute_dihedrals(mtraj, numpy.array([[136, 135, 150, 152]]))[0][0] * 180 / numpy.pi
CV792: dihedral between atoms ['137', '136', '151', '152']; mdtraj.compute_dihedrals(mtraj, numpy.array([[136, 135, 150, 151]]))[0][0] * 180 / numpy.pi
CV793: dihedral between atoms ['136', '138', '141', '142']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 137, 140, 141]]))[0][0] * 180 / numpy.pi
CV794: dihedral between atoms ['139', '138', '141', '142']; mdtraj.compute_dihedrals(mtraj, numpy.array([[138, 137, 140, 141]]))[0][0] * 180 / numpy.pi
CV795: dihedral between atoms ['140', '138', '141', '142']; mdtraj.compute_dihedrals(mtraj, numpy.array([[139, 137, 140, 141]]))[0][0] * 180 / numpy.pi
CV796: dihedral between atoms ['136', '138', '141', '147']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 137, 140, 146]]))[0][0] * 180 / numpy.pi
CV797: dihedral between atoms ['139', '138', '141', '147']; mdtraj.compute_dihedrals(mtraj, numpy.array([[138, 137, 140, 146]]))[0][0] * 180 / numpy.pi
CV798: dihedral between atoms ['140', '138', '141', '147']; mdtraj.compute_dihedrals(mtraj, numpy.array([[139, 137, 140, 146]]))[0][0] * 180 / numpy.pi
CV799: dihedral between atoms ['138', '141', '147', '148']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 140, 146, 147]]))[0][0] * 180 / numpy.pi
CV800: dihedral between atoms ['138', '141', '147', '149']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 140, 146, 148]]))[0][0] * 180 / numpy.pi
CV801: dihedral between atoms ['138', '141', '147', '150']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 140, 146, 149]]))[0][0] * 180 / numpy.pi
CV802: dihedral between atoms ['139', '138', '136', '151']; mdtraj.compute_dihedrals(mtraj, numpy.array([[138, 137, 135, 150]]))[0][0] * 180 / numpy.pi
CV803: dihedral between atoms ['140', '138', '136', '151']; mdtraj.compute_dihedrals(mtraj, numpy.array([[139, 137, 135, 150]]))[0][0] * 180 / numpy.pi
CV804: dihedral between atoms ['141', '138', '136', '151']; mdtraj.compute_dihedrals(mtraj, numpy.array([[140, 137, 135, 150]]))[0][0] * 180 / numpy.pi
CV805: dihedral between atoms ['138', '136', '151', '153']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 135, 150, 152]]))[0][0] * 180 / numpy.pi
CV806: dihedral between atoms ['138', '136', '151', '152']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 135, 150, 151]]))[0][0] * 180 / numpy.pi
CV807: dihedral between atoms ['139', '138', '141', '142']; mdtraj.compute_dihedrals(mtraj, numpy.array([[138, 137, 140, 141]]))[0][0] * 180 / numpy.pi
CV808: dihedral between atoms ['139', '138', '141', '143']; mdtraj.compute_dihedrals(mtraj, numpy.array([[138, 137, 140, 142]]))[0][0] * 180 / numpy.pi
CV809: dihedral between atoms ['139', '138', '141', '147']; mdtraj.compute_dihedrals(mtraj, numpy.array([[138, 137, 140, 146]]))[0][0] * 180 / numpy.pi
CV810: dihedral between atoms ['140', '138', '141', '142']; mdtraj.compute_dihedrals(mtraj, numpy.array([[139, 137, 140, 141]]))[0][0] * 180 / numpy.pi
CV811: dihedral between atoms ['140', '138', '141', '143']; mdtraj.compute_dihedrals(mtraj, numpy.array([[139, 137, 140, 142]]))[0][0] * 180 / numpy.pi
CV812: dihedral between atoms ['140', '138', '141', '147']; mdtraj.compute_dihedrals(mtraj, numpy.array([[139, 137, 140, 146]]))[0][0] * 180 / numpy.pi
CV813: dihedral between atoms ['138', '141', '147', '148']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 140, 146, 147]]))[0][0] * 180 / numpy.pi
CV814: dihedral between atoms ['142', '141', '147', '148']; mdtraj.compute_dihedrals(mtraj, numpy.array([[141, 140, 146, 147]]))[0][0] * 180 / numpy.pi
CV815: dihedral between atoms ['143', '141', '147', '148']; mdtraj.compute_dihedrals(mtraj, numpy.array([[142, 140, 146, 147]]))[0][0] * 180 / numpy.pi
CV816: dihedral between atoms ['138', '141', '147', '150']; mdtraj.compute_dihedrals(mtraj, numpy.array([[137, 140, 146, 149]]))[0][0] * 180 / numpy.pi
CV817: dihedral between atoms ['142', '141', '147', '150']; mdtraj.compute_dihedrals(mtraj, numpy.array([[141, 140, 146, 149]]))[0][0] * 180 / numpy.pi
CV818: dihedral between atoms ['143', '141', '147', '150']; mdtraj.compute_dihedrals(mtraj, numpy.array([[142, 140, 146, 149]]))[0][0] * 180 / numpy.pi
CV819: dihedral between atoms ['142', '141', '147', '148']; mdtraj.compute_dihedrals(mtraj, numpy.array([[141, 140, 146, 147]]))[0][0] * 180 / numpy.pi
CV820: dihedral between atoms ['142', '141', '147', '149']; mdtraj.compute_dihedrals(mtraj, numpy.array([[141, 140, 146, 148]]))[0][0] * 180 / numpy.pi
CV821: dihedral between atoms ['142', '141', '147', '150']; mdtraj.compute_dihedrals(mtraj, numpy.array([[141, 140, 146, 149]]))[0][0] * 180 / numpy.pi
CV822: dihedral between atoms ['136', '151', '153', '154']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 150, 152, 153]]))[0][0] * 180 / numpy.pi
CV823: dihedral between atoms ['152', '151', '153', '154']; mdtraj.compute_dihedrals(mtraj, numpy.array([[151, 150, 152, 153]]))[0][0] * 180 / numpy.pi
CV824: dihedral between atoms ['136', '151', '153', '155']; mdtraj.compute_dihedrals(mtraj, numpy.array([[135, 150, 152, 154]]))[0][0] * 180 / numpy.pi
CV825: dihedral between atoms ['152', '151', '153', '155']; mdtraj.compute_dihedrals(mtraj, numpy.array([[151, 150, 152, 154]]))[0][0] * 180 / numpy.pi
CV826: dihedral between atoms ['151', '153', '155', '156']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 152, 154, 155]]))[0][0] * 180 / numpy.pi
CV827: dihedral between atoms ['151', '153', '155', '157']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 152, 154, 156]]))[0][0] * 180 / numpy.pi
CV828: dihedral between atoms ['151', '153', '155', '167']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 152, 154, 166]]))[0][0] * 180 / numpy.pi
CV829: dihedral between atoms ['152', '151', '153', '154']; mdtraj.compute_dihedrals(mtraj, numpy.array([[151, 150, 152, 153]]))[0][0] * 180 / numpy.pi
CV830: dihedral between atoms ['152', '151', '153', '155']; mdtraj.compute_dihedrals(mtraj, numpy.array([[151, 150, 152, 154]]))[0][0] * 180 / numpy.pi
CV831: dihedral between atoms ['151', '153', '155', '156']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 152, 154, 155]]))[0][0] * 180 / numpy.pi
CV832: dihedral between atoms ['154', '153', '155', '156']; mdtraj.compute_dihedrals(mtraj, numpy.array([[153, 152, 154, 155]]))[0][0] * 180 / numpy.pi
CV833: dihedral between atoms ['151', '153', '155', '157']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 152, 154, 156]]))[0][0] * 180 / numpy.pi
CV834: dihedral between atoms ['154', '153', '155', '157']; mdtraj.compute_dihedrals(mtraj, numpy.array([[153, 152, 154, 156]]))[0][0] * 180 / numpy.pi
CV835: dihedral between atoms ['153', '155', '157', '158']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 156, 157]]))[0][0] * 180 / numpy.pi
CV836: dihedral between atoms ['153', '155', '157', '159']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 156, 158]]))[0][0] * 180 / numpy.pi
CV837: dihedral between atoms ['153', '155', '157', '163']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 156, 162]]))[0][0] * 180 / numpy.pi
CV838: dihedral between atoms ['151', '153', '155', '167']; mdtraj.compute_dihedrals(mtraj, numpy.array([[150, 152, 154, 166]]))[0][0] * 180 / numpy.pi
CV839: dihedral between atoms ['154', '153', '155', '167']; mdtraj.compute_dihedrals(mtraj, numpy.array([[153, 152, 154, 166]]))[0][0] * 180 / numpy.pi
CV840: dihedral between atoms ['153', '155', '167', '169']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 166, 168]]))[0][0] * 180 / numpy.pi
CV841: dihedral between atoms ['153', '155', '167', '168']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 166, 167]]))[0][0] * 180 / numpy.pi
CV842: dihedral between atoms ['154', '153', '155', '156']; mdtraj.compute_dihedrals(mtraj, numpy.array([[153, 152, 154, 155]]))[0][0] * 180 / numpy.pi
CV843: dihedral between atoms ['154', '153', '155', '157']; mdtraj.compute_dihedrals(mtraj, numpy.array([[153, 152, 154, 156]]))[0][0] * 180 / numpy.pi
CV844: dihedral between atoms ['154', '153', '155', '167']; mdtraj.compute_dihedrals(mtraj, numpy.array([[153, 152, 154, 166]]))[0][0] * 180 / numpy.pi
CV845: dihedral between atoms ['153', '155', '157', '158']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 156, 157]]))[0][0] * 180 / numpy.pi
CV846: dihedral between atoms ['156', '155', '157', '158']; mdtraj.compute_dihedrals(mtraj, numpy.array([[155, 154, 156, 157]]))[0][0] * 180 / numpy.pi
CV847: dihedral between atoms ['167', '155', '157', '158']; mdtraj.compute_dihedrals(mtraj, numpy.array([[166, 154, 156, 157]]))[0][0] * 180 / numpy.pi
CV848: dihedral between atoms ['153', '155', '157', '159']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 156, 158]]))[0][0] * 180 / numpy.pi
CV849: dihedral between atoms ['156', '155', '157', '159']; mdtraj.compute_dihedrals(mtraj, numpy.array([[155, 154, 156, 158]]))[0][0] * 180 / numpy.pi
CV850: dihedral between atoms ['167', '155', '157', '159']; mdtraj.compute_dihedrals(mtraj, numpy.array([[166, 154, 156, 158]]))[0][0] * 180 / numpy.pi
CV851: dihedral between atoms ['155', '157', '159', '160']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 158, 159]]))[0][0] * 180 / numpy.pi
CV852: dihedral between atoms ['155', '157', '159', '161']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 158, 160]]))[0][0] * 180 / numpy.pi
CV853: dihedral between atoms ['155', '157', '159', '162']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 158, 161]]))[0][0] * 180 / numpy.pi
CV854: dihedral between atoms ['153', '155', '157', '163']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 156, 162]]))[0][0] * 180 / numpy.pi
CV855: dihedral between atoms ['156', '155', '157', '163']; mdtraj.compute_dihedrals(mtraj, numpy.array([[155, 154, 156, 162]]))[0][0] * 180 / numpy.pi
CV856: dihedral between atoms ['167', '155', '157', '163']; mdtraj.compute_dihedrals(mtraj, numpy.array([[166, 154, 156, 162]]))[0][0] * 180 / numpy.pi
CV857: dihedral between atoms ['155', '157', '163', '164']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 162, 163]]))[0][0] * 180 / numpy.pi
CV858: dihedral between atoms ['155', '157', '163', '165']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 162, 164]]))[0][0] * 180 / numpy.pi
CV859: dihedral between atoms ['155', '157', '163', '166']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 162, 165]]))[0][0] * 180 / numpy.pi
CV860: dihedral between atoms ['153', '155', '167', '169']; mdtraj.compute_dihedrals(mtraj, numpy.array([[152, 154, 166, 168]]))[0][0] * 180 / numpy.pi
CV861: dihedral between atoms ['156', '155', '167', '169']; mdtraj.compute_dihedrals(mtraj, numpy.array([[155, 154, 166, 168]]))[0][0] * 180 / numpy.pi
CV862: dihedral between atoms ['157', '155', '167', '169']; mdtraj.compute_dihedrals(mtraj, numpy.array([[156, 154, 166, 168]]))[0][0] * 180 / numpy.pi
CV863: dihedral between atoms ['155', '167', '169', '170']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 166, 168, 169]]))[0][0] * 180 / numpy.pi
CV864: dihedral between atoms ['155', '167', '169', '171']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 166, 168, 170]]))[0][0] * 180 / numpy.pi
CV865: dihedral between atoms ['156', '155', '157', '158']; mdtraj.compute_dihedrals(mtraj, numpy.array([[155, 154, 156, 157]]))[0][0] * 180 / numpy.pi
CV866: dihedral between atoms ['156', '155', '157', '159']; mdtraj.compute_dihedrals(mtraj, numpy.array([[155, 154, 156, 158]]))[0][0] * 180 / numpy.pi
CV867: dihedral between atoms ['156', '155', '157', '163']; mdtraj.compute_dihedrals(mtraj, numpy.array([[155, 154, 156, 162]]))[0][0] * 180 / numpy.pi
CV868: dihedral between atoms ['156', '155', '167', '169']; mdtraj.compute_dihedrals(mtraj, numpy.array([[155, 154, 166, 168]]))[0][0] * 180 / numpy.pi
CV869: dihedral between atoms ['156', '155', '167', '168']; mdtraj.compute_dihedrals(mtraj, numpy.array([[155, 154, 166, 167]]))[0][0] * 180 / numpy.pi
CV870: dihedral between atoms ['155', '157', '159', '160']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 158, 159]]))[0][0] * 180 / numpy.pi
CV871: dihedral between atoms ['158', '157', '159', '160']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 158, 159]]))[0][0] * 180 / numpy.pi
CV872: dihedral between atoms ['163', '157', '159', '160']; mdtraj.compute_dihedrals(mtraj, numpy.array([[162, 156, 158, 159]]))[0][0] * 180 / numpy.pi
CV873: dihedral between atoms ['155', '157', '159', '161']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 158, 160]]))[0][0] * 180 / numpy.pi
CV874: dihedral between atoms ['158', '157', '159', '161']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 158, 160]]))[0][0] * 180 / numpy.pi
CV875: dihedral between atoms ['163', '157', '159', '161']; mdtraj.compute_dihedrals(mtraj, numpy.array([[162, 156, 158, 160]]))[0][0] * 180 / numpy.pi
CV876: dihedral between atoms ['155', '157', '163', '164']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 162, 163]]))[0][0] * 180 / numpy.pi
CV877: dihedral between atoms ['158', '157', '163', '164']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 162, 163]]))[0][0] * 180 / numpy.pi
CV878: dihedral between atoms ['159', '157', '163', '164']; mdtraj.compute_dihedrals(mtraj, numpy.array([[158, 156, 162, 163]]))[0][0] * 180 / numpy.pi
CV879: dihedral between atoms ['155', '157', '163', '165']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 162, 164]]))[0][0] * 180 / numpy.pi
CV880: dihedral between atoms ['158', '157', '163', '165']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 162, 164]]))[0][0] * 180 / numpy.pi
CV881: dihedral between atoms ['159', '157', '163', '165']; mdtraj.compute_dihedrals(mtraj, numpy.array([[158, 156, 162, 164]]))[0][0] * 180 / numpy.pi
CV882: dihedral between atoms ['155', '157', '163', '166']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 156, 162, 165]]))[0][0] * 180 / numpy.pi
CV883: dihedral between atoms ['158', '157', '163', '166']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 162, 165]]))[0][0] * 180 / numpy.pi
CV884: dihedral between atoms ['159', '157', '163', '166']; mdtraj.compute_dihedrals(mtraj, numpy.array([[158, 156, 162, 165]]))[0][0] * 180 / numpy.pi
CV885: dihedral between atoms ['158', '157', '155', '167']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 154, 166]]))[0][0] * 180 / numpy.pi
CV886: dihedral between atoms ['159', '157', '155', '167']; mdtraj.compute_dihedrals(mtraj, numpy.array([[158, 156, 154, 166]]))[0][0] * 180 / numpy.pi
CV887: dihedral between atoms ['163', '157', '155', '167']; mdtraj.compute_dihedrals(mtraj, numpy.array([[162, 156, 154, 166]]))[0][0] * 180 / numpy.pi
CV888: dihedral between atoms ['157', '155', '167', '169']; mdtraj.compute_dihedrals(mtraj, numpy.array([[156, 154, 166, 168]]))[0][0] * 180 / numpy.pi
CV889: dihedral between atoms ['157', '155', '167', '168']; mdtraj.compute_dihedrals(mtraj, numpy.array([[156, 154, 166, 167]]))[0][0] * 180 / numpy.pi
CV890: dihedral between atoms ['158', '157', '159', '160']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 158, 159]]))[0][0] * 180 / numpy.pi
CV891: dihedral between atoms ['158', '157', '159', '161']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 158, 160]]))[0][0] * 180 / numpy.pi
CV892: dihedral between atoms ['158', '157', '159', '162']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 158, 161]]))[0][0] * 180 / numpy.pi
CV893: dihedral between atoms ['158', '157', '163', '164']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 162, 163]]))[0][0] * 180 / numpy.pi
CV894: dihedral between atoms ['158', '157', '163', '165']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 162, 164]]))[0][0] * 180 / numpy.pi
CV895: dihedral between atoms ['158', '157', '163', '166']; mdtraj.compute_dihedrals(mtraj, numpy.array([[157, 156, 162, 165]]))[0][0] * 180 / numpy.pi
CV896: dihedral between atoms ['160', '159', '157', '163']; mdtraj.compute_dihedrals(mtraj, numpy.array([[159, 158, 156, 162]]))[0][0] * 180 / numpy.pi
CV897: dihedral between atoms ['161', '159', '157', '163']; mdtraj.compute_dihedrals(mtraj, numpy.array([[160, 158, 156, 162]]))[0][0] * 180 / numpy.pi
CV898: dihedral between atoms ['162', '159', '157', '163']; mdtraj.compute_dihedrals(mtraj, numpy.array([[161, 158, 156, 162]]))[0][0] * 180 / numpy.pi
CV899: dihedral between atoms ['159', '157', '163', '164']; mdtraj.compute_dihedrals(mtraj, numpy.array([[158, 156, 162, 163]]))[0][0] * 180 / numpy.pi
CV900: dihedral between atoms ['159', '157', '163', '165']; mdtraj.compute_dihedrals(mtraj, numpy.array([[158, 156, 162, 164]]))[0][0] * 180 / numpy.pi
CV901: dihedral between atoms ['159', '157', '163', '166']; mdtraj.compute_dihedrals(mtraj, numpy.array([[158, 156, 162, 165]]))[0][0] * 180 / numpy.pi
CV902: dihedral between atoms ['155', '167', '169', '170']; mdtraj.compute_dihedrals(mtraj, numpy.array([[154, 166, 168, 169]]))[0][0] * 180 / numpy.pi
CV903: dihedral between atoms ['168', '167', '169', '170']; mdtraj.compute_dihedrals(mtraj, numpy.array([[167, 166, 168, 169]]))[0][0] * 180 / numpy.pi
CV904: difference of distances between atoms [102, 104] and [102, 105]; (mdtraj.compute_distances(mtraj, numpy.array([[101, 103]]))[0][0] * 10) - (mdtraj.compute_distances(mtraj, numpy.array([[101, 104]]))[0][0] * 10)
CV905: user-defined CV; pytraj.distance(traj, '@1 @2')[0]
CV906: user-defined CV; pytraj.angle(traj, '@2 @3 @4')[0]
